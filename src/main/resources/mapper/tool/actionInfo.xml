<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="actionInfo">

	<!--  所有主分支  -->
	<select id="indexDir" parameterType="hashmap" resultType="hashmap">
		select 
			id,
			action_name as actionName,
			action,
			action_desc as actionDesc,
			type_value as typeValue,
			is_dir as isDir,
			order_value as orderValue,
			action_level as actionLevel
		from action_info2
		where is_dir = 1
	</select>
	
	<!--  一个分支的子节点  -->
	<select id="indexNodeByDirId" parameterType="int" resultType="hashmap">
		select 
			id,
			action_name as actionName,
			action,
			action_desc as actionDesc,
			type_value as typeValue,
			is_dir as isDir,
			order_value as orderValue,
			action_level as actionLevel
		from action_info2
		where is_dir = 0  
		and id <![CDATA[>]]> #{id}
		and id <![CDATA[<]]> (#{id}+100)
	</select>
	
	<!--  普通用户登录之后获取角色权限  -->
	<select id="indexGetUserAction" parameterType="int" resultType="com.lingyu.dntg.bean.vo.ActionInfo">
		select 
			d.id,
			d.action_name as actionName,
			d.action,
			d.is_dir as isDir
		from user_role b, action_role c,action_info2 d  
		where b.role_id = c.role_id  and c.action_id = d.id 
		AND b.user_id = #{userId}
		group by d.id 
		order by d.order_value asc
	</select>
	
	<!--  管理员登录之后获取角色权限  -->
	<select id="adminGetUserAction" parameterType="int" resultType="com.lingyu.dntg.bean.vo.ActionInfo">
		select 
			action_name as actionName,
			action,
			is_dir as isDir
		from action_info2
		where action_level <![CDATA[ >= ]]> #{actionLevel}
		order by order_value asc
	</select>
	
	<select id="getNewDirId" resultType="int">
		select concat(substring( max(id)+1000+"", 1,3),'00') from action_info2 
	</select>
	
	<select id="getNewNodeIdByDirId" parameterType="int" resultType="int">
		select  max(id)+1 from action_info2 where id <![CDATA[>]]> #{dirId} and id <![CDATA[<]]> (#{dirId}+100)
	</select>
	
	<select id="byId" parameterType="int" resultType="hashmap">
		select 
			id,
			action_name as actionName,
			action,
			action_desc as actionDesc,
			type_value as typeValue,
			is_dir as isDir,
			order_value as orderValue,
			action_level as actionLevel
		from action_info2
		where id=#{id}
	</select>
	
	<select id="selectActionByUserRole" parameterType="hashmap" resultType="hashmap">
		select 
			a.id,
			a.action_name as actionName,
			a.is_dir as isDir,
			a.action_level as actionLevel,
			b.id  as actionRoleId
		from (select * from action_info2 where action_level >= #{sessionUser.userLevel} ) a 
		left join action_role b
			on a.id = b.action_id 
			and b.role_id = #{id}
		order by a.order_value asc
	</select>
	
	<select id="getAllRoleByActionId" parameterType="string" resultType="hashmap">
		select 
			ri.id,
			ri.role_name as roleName,
		(select count(1) from action_role ar where ar.action_id = #{actionId} and ar.role_id = ri.id ) as isCheck
		from role_info ri 
	</select>
	
	<insert id="insert" parameterType="com.lingyu.dntg.bean.vo.ActionInfo">
		insert into action_info2(
			id, 
			action_name,
			action,
			action_desc,
			type_value,
			is_dir,
			order_value,
			action_level
		)
		values(
			#{id},
			#{actionName},
			#{action},
			#{actionDesc},
			#{typeValue},
			#{isDir},
			#{orderValue},
			#{actionLevel}
		)
	</insert>
	
	<insert id="addInsert" parameterType="hashmap">
		insert into action_info2(
			id, 
			action_name,
			action,
			action_desc,
			type_value,
			is_dir,
			order_value,
			action_level
		)
		values(
			#{id},
			#{actionName},
			#{action},
			#{actionDesc},
			#{typeValue},
			#{isDir},
			#{orderValue},
			#{actionLevel}
		)
	</insert>
	
	<update id="update" parameterType="hashmap">
		update action_info2 set
			action_name=#{actionName},
			action=#{action},
			action_desc=#{actionDesc},
			type_value=#{typeValue},
			order_value=#{orderValue},
			action_level=#{actionLevel}
		where id=#{id}
	</update>
	
	<delete id="delete" parameterType="int">
		DELETE from action_info2 WHERE 
		id in
        <foreach item="item" index="index" collection="list" open="(" separator="," close=")">
            #{item}
        </foreach>
	</delete>
	
	<delete id="deleteAll">
		TRUNCATE TABLE action_info2
	</delete>
</mapper>
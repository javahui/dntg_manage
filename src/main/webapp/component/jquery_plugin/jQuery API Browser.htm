<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<!-- saved from url=(0053)http://jquery.bassistance.de/api-browser/plugins.html -->
<HTML><HEAD><META content="IE=7.0000" http-equiv="X-UA-Compatible">
<TITLE>jQuery API Browser</TITLE>
<META content="text/html; charset=UTF-8" http-equiv=Content-Type><LINK 
rel=stylesheet href="jQuery%20API%20Browser_files/screen.css" 
media=screen,projector><LINK rel=stylesheet 
href="jQuery%20API%20Browser_files/print.css" media=print>
<SCRIPT type=text/javascript 
src="jQuery%20API%20Browser_files/browser.pack.js"></SCRIPT>

<SCRIPT type=text/javascript src="jQuery%20API%20Browser_files/doc.js"></SCRIPT>

<META name=GENERATOR content="MSHTML 9.00.8112.16421"></HEAD>
<BODY>
<H1><A href="http://jquery.com/"><IMG alt="jQuery Logo" 
src="jQuery%20API%20Browser_files/jquery_logo.gif"></A> </H1>
<DIV id=header>API Browser <SPAN>(<A 
href="http://jquery.bassistance.de/api-browser/jquery-api-browser.zip">Download</A>)</SPAN> 
</DIV>
<DIV id=content>
<DIV id=nav>
<H2>Navigation</H2>
<UL class=tabs-nav>
  <LI><A 
  href="http://jquery.bassistance.de/api-browser/plugins.html#navCat">Category</A> 

  <LI><A 
  href="http://jquery.bassistance.de/api-browser/plugins.html#navAlpha">Alphabetical</A> 
  </LI></UL>
<DIV id=navCat class=navsub>
<H3>Categorized</H3>
<DIV class=treecontrol><A 
href="http://jquery.bassistance.de/api-browser/plugins.html#">Collapse All</A><A 
href="http://jquery.bassistance.de/api-browser/plugins.html#">Expand All</A><A 
href="http://jquery.bassistance.de/api-browser/plugins.html#">Toggle All</A> 
</DIV>
<UL>
  <LI>Plugins
  <UL></UL>
  <UL>
    <LI>Accordion
    <UL>
      <LI><A 
      href="http://jquery.bassistance.de/api-browser/plugins.html#AccordionMap">Accordion(<SPAN 
      class="arg-type tooltip">Map</SPAN>)</A> 
      <LI><A 
      href="http://jquery.bassistance.de/api-browser/plugins.html#activateStringNumber">activate(<SPAN 
      class="arg-type tooltip">String|Number</SPAN>)</A> 
      <LI><A 
      href="http://jquery.bassistance.de/api-browser/plugins.html#jQueryAccordionsetDefaultsMap">jQuery.Accordion.setDefaults(<SPAN 
      class="arg-type tooltip">Map</SPAN>)</A> </LI></UL>
    <LI>Autocomplete
    <UL>
      <LI><A 
      href="http://jquery.bassistance.de/api-browser/plugins.html#autocompleteStringArrayMap">autocomplete(<SPAN 
      class="arg-type tooltip">String|Array</SPAN>, <SPAN 
      class="arg-type tooltip">Map</SPAN>)</A> 
      <LI><A 
      href="http://jquery.bassistance.de/api-browser/plugins.html#flushCache">flushCache()</A> 

      <LI><A 
      href="http://jquery.bassistance.de/api-browser/plugins.html#resultFunction">result(<SPAN 
      class="arg-type tooltip">Function</SPAN>)</A> 
      <LI><A 
      href="http://jquery.bassistance.de/api-browser/plugins.html#search">search()</A> 

      <LI><A 
      href="http://jquery.bassistance.de/api-browser/plugins.html#setOptions">setOptions()</A> 
      </LI></UL>
    <LI>Format
    <UL>
      <LI><A 
      href="http://jquery.bassistance.de/api-browser/plugins.html#htmlStringString">html(<SPAN 
      class="arg-type tooltip">String</SPAN>, <SPAN 
      class="arg-type tooltip">String</SPAN>)</A> 
      <LI><A 
      href="http://jquery.bassistance.de/api-browser/plugins.html#jQueryformatStringArrayString">jQuery.format(<SPAN 
      class="arg-type tooltip">String</SPAN>, <SPAN 
      class="arg-type tooltip">Array&lt;String&gt;</SPAN>)</A> 
      <LI><A 
      href="http://jquery.bassistance.de/api-browser/plugins.html#textStringString">text(<SPAN 
      class="arg-type tooltip">String</SPAN>, <SPAN 
      class="arg-type tooltip">String</SPAN>)</A> </LI></UL>
    <LI>Tooltip
    <UL>
      <LI><A 
      href="http://jquery.bassistance.de/api-browser/plugins.html#TooltipObject">Tooltip(<SPAN 
      class="arg-type tooltip">Object</SPAN>)</A> </LI></UL>
    <LI>Treeview
    <UL>
      <LI><A 
      href="http://jquery.bassistance.de/api-browser/plugins.html#TreeviewMap">Treeview(<SPAN 
      class="arg-type tooltip">Map</SPAN>)</A> </LI></UL>
    <LI>Validate
    <UL>
      <LI><A 
      href="http://jquery.bassistance.de/api-browser/plugins.html#:blank">:blank</A> 

      <LI><A 
      href="http://jquery.bassistance.de/api-browser/plugins.html#:filled">:filled</A> 

      <LI><A 
      href="http://jquery.bassistance.de/api-browser/plugins.html#:unchecked">:unchecked</A> 

      <LI><A 
      href="http://jquery.bassistance.de/api-browser/plugins.html#jQueryvalidatoraddMethodStringFunctionString">jQuery.validator.addMethod(<SPAN 
      class="arg-type tooltip">String</SPAN>, <SPAN 
      class="arg-type tooltip">Function</SPAN>, <SPAN 
      class="arg-type tooltip">String</SPAN>)</A> 
      <LI><A 
      href="http://jquery.bassistance.de/api-browser/plugins.html#jQueryvalidatormessages">jQuery.validator.messages</A> 

      <LI><A 
      href="http://jquery.bassistance.de/api-browser/plugins.html#jQueryvalidatorprotoypeelementStringElement">jQuery.validator.protoype.element(<SPAN 
      class="arg-type tooltip">String|Element</SPAN>)</A> 
      <LI><A 
      href="http://jquery.bassistance.de/api-browser/plugins.html#jQueryvalidatorprotoypeform">jQuery.validator.protoype.form()</A> 

      <LI><A 
      href="http://jquery.bassistance.de/api-browser/plugins.html#jQueryvalidatorprotoyperesetForm">jQuery.validator.protoype.resetForm()</A> 

      <LI><A 
      href="http://jquery.bassistance.de/api-browser/plugins.html#jQueryvalidatorprotoypeshowErrorsMap">jQuery.validator.protoype.showErrors(<SPAN 
      class="arg-type tooltip">Map</SPAN>)</A> 
      <LI><A 
      href="http://jquery.bassistance.de/api-browser/plugins.html#jQueryvalidatorsetDefaultsObjectString,">jQuery.validator.setDefaults(<SPAN 
      class="arg-type tooltip">Object&lt;String,</SPAN>)</A> 
      <LI><A 
      href="http://jquery.bassistance.de/api-browser/plugins.html#Stringformat">String.format()</A> 

      <LI><A 
      href="http://jquery.bassistance.de/api-browser/plugins.html#validateMap">validate(<SPAN 
      class="arg-type tooltip">Map</SPAN>)</A> </LI></UL>
    <UL>
      <LI>Methods
      <UL>
        <LI><A 
        href="http://jquery.bassistance.de/api-browser/plugins.html#jQueryvalidatormethodsStringElementObject">jQuery.validator.methods</A> 

        <LI><A 
        href="http://jquery.bassistance.de/api-browser/plugins.html#jQueryvalidatormethodsaccept">jQuery.validator.methods.accept()</A> 

        <LI><A 
        href="http://jquery.bassistance.de/api-browser/plugins.html#jQueryvalidatormethodscreditcard">jQuery.validator.methods.creditcard()</A> 

        <LI><A 
        href="http://jquery.bassistance.de/api-browser/plugins.html#jQueryvalidatormethodsdate">jQuery.validator.methods.date()</A> 

        <LI><A 
        href="http://jquery.bassistance.de/api-browser/plugins.html#jQueryvalidatormethodsdate">jQuery.validator.methods.date()</A> 

        <LI><A 
        href="http://jquery.bassistance.de/api-browser/plugins.html#jQueryvalidatormethodsdateDE">jQuery.validator.methods.dateDE()</A> 

        <LI><A 
        href="http://jquery.bassistance.de/api-browser/plugins.html#jQueryvalidatormethodsdigits">jQuery.validator.methods.digits()</A> 

        <LI><A 
        href="http://jquery.bassistance.de/api-browser/plugins.html#jQueryvalidatormethodsdigitsString">jQuery.validator.methods.digits(<SPAN 
        class="arg-type tooltip">String</SPAN>)</A> 
        <LI><A 
        href="http://jquery.bassistance.de/api-browser/plugins.html#jQueryvalidatormethodsemail">jQuery.validator.methods.email()</A> 

        <LI><A 
        href="http://jquery.bassistance.de/api-browser/plugins.html#jQueryvalidatormethodsmaxLengthNumber">jQuery.validator.methods.maxLength(<SPAN 
        class="arg-type tooltip">Number</SPAN>)</A> 
        <LI><A 
        href="http://jquery.bassistance.de/api-browser/plugins.html#jQueryvalidatormethodsmaxValueNumber">jQuery.validator.methods.maxValue(<SPAN 
        class="arg-type tooltip">Number</SPAN>)</A> 
        <LI><A 
        href="http://jquery.bassistance.de/api-browser/plugins.html#jQueryvalidatormethodsminLengthNumber">jQuery.validator.methods.minLength(<SPAN 
        class="arg-type tooltip">Number</SPAN>)</A> 
        <LI><A 
        href="http://jquery.bassistance.de/api-browser/plugins.html#jQueryvalidatormethodsminValueNumber">jQuery.validator.methods.minValue(<SPAN 
        class="arg-type tooltip">Number</SPAN>)</A> 
        <LI><A 
        href="http://jquery.bassistance.de/api-browser/plugins.html#jQueryvalidatormethodsnumber">jQuery.validator.methods.number()</A> 

        <LI><A 
        href="http://jquery.bassistance.de/api-browser/plugins.html#jQueryvalidatormethodsnumberDE">jQuery.validator.methods.numberDE()</A> 

        <LI><A 
        href="http://jquery.bassistance.de/api-browser/plugins.html#jQueryvalidatormethodsrangeLengthArrayNumber">jQuery.validator.methods.rangeLength(<SPAN 
        class="arg-type tooltip">Array&lt;Number&gt;</SPAN>)</A> 
        <LI><A 
        href="http://jquery.bassistance.de/api-browser/plugins.html#jQueryvalidatormethodsrangeValueArrayNumber">jQuery.validator.methods.rangeValue(<SPAN 
        class="arg-type tooltip">Array&lt;Number&gt;</SPAN>)</A> 
        <LI><A 
        href="http://jquery.bassistance.de/api-browser/plugins.html#jQueryvalidatormethodsrequiredStringElementBooleanStringFunction">jQuery.validator.methods.required(<SPAN 
        class="arg-type tooltip">String</SPAN>, <SPAN 
        class="arg-type tooltip">Element</SPAN>, <SPAN 
        class="arg-type tooltip">Boolean|String|Function</SPAN>)</A> 
        <LI><A 
        href="http://jquery.bassistance.de/api-browser/plugins.html#jQueryvalidatormethodsurl">jQuery.validator.methods.url()</A> 
        </LI></UL></LI></UL></LI></UL></LI></UL></DIV>
<DIV id=navAlpha class=navsub>
<H3>Alphabetic</H3>
<DIV class=treecontrol><A 
href="http://jquery.bassistance.de/api-browser/plugins.html#">Collapse All</A><A 
href="http://jquery.bassistance.de/api-browser/plugins.html#">Expand All</A><A 
href="http://jquery.bassistance.de/api-browser/plugins.html#">Toggle All</A> 
</DIV>
<UL>
  <LI><A 
  href="http://jquery.bassistance.de/api-browser/plugins.html#:blank">:blank</A> 

  <LI><A 
  href="http://jquery.bassistance.de/api-browser/plugins.html#:filled">:filled</A> 

  <LI><A 
  href="http://jquery.bassistance.de/api-browser/plugins.html#:unchecked">:unchecked</A> 

  <LI><A 
  href="http://jquery.bassistance.de/api-browser/plugins.html#AccordionMap">Accordion(<SPAN 
  class="arg-type tooltip">Map</SPAN>)</A> 
  <LI><A 
  href="http://jquery.bassistance.de/api-browser/plugins.html#activateStringNumber">activate(<SPAN 
  class="arg-type tooltip">String|Number</SPAN>)</A> 
  <LI><A 
  href="http://jquery.bassistance.de/api-browser/plugins.html#autocompleteStringArrayMap">autocomplete(<SPAN 
  class="arg-type tooltip">String|Array</SPAN>, <SPAN 
  class="arg-type tooltip">Map</SPAN>)</A> 
  <LI><A 
  href="http://jquery.bassistance.de/api-browser/plugins.html#flushCache">flushCache()</A> 

  <LI><A 
  href="http://jquery.bassistance.de/api-browser/plugins.html#htmlStringString">html(<SPAN 
  class="arg-type tooltip">String</SPAN>, <SPAN 
  class="arg-type tooltip">String</SPAN>)</A> 
  <LI><A 
  href="http://jquery.bassistance.de/api-browser/plugins.html#jQueryAccordionsetDefaultsMap">jQuery.Accordion.setDefaults(<SPAN 
  class="arg-type tooltip">Map</SPAN>)</A> 
  <LI><A 
  href="http://jquery.bassistance.de/api-browser/plugins.html#jQueryformatStringArrayString">jQuery.format(<SPAN 
  class="arg-type tooltip">String</SPAN>, <SPAN 
  class="arg-type tooltip">Array&lt;String&gt;</SPAN>)</A> 
  <LI><A 
  href="http://jquery.bassistance.de/api-browser/plugins.html#jQueryvalidatoraddMethodStringFunctionString">jQuery.validator.addMethod(<SPAN 
  class="arg-type tooltip">String</SPAN>, <SPAN 
  class="arg-type tooltip">Function</SPAN>, <SPAN 
  class="arg-type tooltip">String</SPAN>)</A> 
  <LI><A 
  href="http://jquery.bassistance.de/api-browser/plugins.html#jQueryvalidatormessages">jQuery.validator.messages</A> 

  <LI><A 
  href="http://jquery.bassistance.de/api-browser/plugins.html#jQueryvalidatormethodsStringElementObject">jQuery.validator.methods</A> 

  <LI><A 
  href="http://jquery.bassistance.de/api-browser/plugins.html#jQueryvalidatormethodsaccept">jQuery.validator.methods.accept()</A> 

  <LI><A 
  href="http://jquery.bassistance.de/api-browser/plugins.html#jQueryvalidatormethodscreditcard">jQuery.validator.methods.creditcard()</A> 

  <LI><A 
  href="http://jquery.bassistance.de/api-browser/plugins.html#jQueryvalidatormethodsdate">jQuery.validator.methods.date()</A> 

  <LI><A 
  href="http://jquery.bassistance.de/api-browser/plugins.html#jQueryvalidatormethodsdate">jQuery.validator.methods.date()</A> 

  <LI><A 
  href="http://jquery.bassistance.de/api-browser/plugins.html#jQueryvalidatormethodsdateDE">jQuery.validator.methods.dateDE()</A> 

  <LI><A 
  href="http://jquery.bassistance.de/api-browser/plugins.html#jQueryvalidatormethodsdigits">jQuery.validator.methods.digits()</A> 

  <LI><A 
  href="http://jquery.bassistance.de/api-browser/plugins.html#jQueryvalidatormethodsdigitsString">jQuery.validator.methods.digits(<SPAN 
  class="arg-type tooltip">String</SPAN>)</A> 
  <LI><A 
  href="http://jquery.bassistance.de/api-browser/plugins.html#jQueryvalidatormethodsemail">jQuery.validator.methods.email()</A> 

  <LI><A 
  href="http://jquery.bassistance.de/api-browser/plugins.html#jQueryvalidatormethodsmaxLengthNumber">jQuery.validator.methods.maxLength(<SPAN 
  class="arg-type tooltip">Number</SPAN>)</A> 
  <LI><A 
  href="http://jquery.bassistance.de/api-browser/plugins.html#jQueryvalidatormethodsmaxValueNumber">jQuery.validator.methods.maxValue(<SPAN 
  class="arg-type tooltip">Number</SPAN>)</A> 
  <LI><A 
  href="http://jquery.bassistance.de/api-browser/plugins.html#jQueryvalidatormethodsminLengthNumber">jQuery.validator.methods.minLength(<SPAN 
  class="arg-type tooltip">Number</SPAN>)</A> 
  <LI><A 
  href="http://jquery.bassistance.de/api-browser/plugins.html#jQueryvalidatormethodsminValueNumber">jQuery.validator.methods.minValue(<SPAN 
  class="arg-type tooltip">Number</SPAN>)</A> 
  <LI><A 
  href="http://jquery.bassistance.de/api-browser/plugins.html#jQueryvalidatormethodsnumber">jQuery.validator.methods.number()</A> 

  <LI><A 
  href="http://jquery.bassistance.de/api-browser/plugins.html#jQueryvalidatormethodsnumberDE">jQuery.validator.methods.numberDE()</A> 

  <LI><A 
  href="http://jquery.bassistance.de/api-browser/plugins.html#jQueryvalidatormethodsrangeLengthArrayNumber">jQuery.validator.methods.rangeLength(<SPAN 
  class="arg-type tooltip">Array&lt;Number&gt;</SPAN>)</A> 
  <LI><A 
  href="http://jquery.bassistance.de/api-browser/plugins.html#jQueryvalidatormethodsrangeValueArrayNumber">jQuery.validator.methods.rangeValue(<SPAN 
  class="arg-type tooltip">Array&lt;Number&gt;</SPAN>)</A> 
  <LI><A 
  href="http://jquery.bassistance.de/api-browser/plugins.html#jQueryvalidatormethodsrequiredStringElementBooleanStringFunction">jQuery.validator.methods.required(<SPAN 
  class="arg-type tooltip">String</SPAN>, <SPAN 
  class="arg-type tooltip">Element</SPAN>, <SPAN 
  class="arg-type tooltip">Boolean|String|Function</SPAN>)</A> 
  <LI><A 
  href="http://jquery.bassistance.de/api-browser/plugins.html#jQueryvalidatormethodsurl">jQuery.validator.methods.url()</A> 

  <LI><A 
  href="http://jquery.bassistance.de/api-browser/plugins.html#jQueryvalidatorprotoypeelementStringElement">jQuery.validator.protoype.element(<SPAN 
  class="arg-type tooltip">String|Element</SPAN>)</A> 
  <LI><A 
  href="http://jquery.bassistance.de/api-browser/plugins.html#jQueryvalidatorprotoypeform">jQuery.validator.protoype.form()</A> 

  <LI><A 
  href="http://jquery.bassistance.de/api-browser/plugins.html#jQueryvalidatorprotoyperesetForm">jQuery.validator.protoype.resetForm()</A> 

  <LI><A 
  href="http://jquery.bassistance.de/api-browser/plugins.html#jQueryvalidatorprotoypeshowErrorsMap">jQuery.validator.protoype.showErrors(<SPAN 
  class="arg-type tooltip">Map</SPAN>)</A> 
  <LI><A 
  href="http://jquery.bassistance.de/api-browser/plugins.html#jQueryvalidatorsetDefaultsObjectString,">jQuery.validator.setDefaults(<SPAN 
  class="arg-type tooltip">Object&lt;String,</SPAN>)</A> 
  <LI><A 
  href="http://jquery.bassistance.de/api-browser/plugins.html#resultFunction">result(<SPAN 
  class="arg-type tooltip">Function</SPAN>)</A> 
  <LI><A 
  href="http://jquery.bassistance.de/api-browser/plugins.html#search">search()</A> 

  <LI><A 
  href="http://jquery.bassistance.de/api-browser/plugins.html#setOptions">setOptions()</A> 

  <LI><A 
  href="http://jquery.bassistance.de/api-browser/plugins.html#Stringformat">String.format()</A> 

  <LI><A 
  href="http://jquery.bassistance.de/api-browser/plugins.html#textStringString">text(<SPAN 
  class="arg-type tooltip">String</SPAN>, <SPAN 
  class="arg-type tooltip">String</SPAN>)</A> 
  <LI><A 
  href="http://jquery.bassistance.de/api-browser/plugins.html#TooltipObject">Tooltip(<SPAN 
  class="arg-type tooltip">Object</SPAN>)</A> 
  <LI><A 
  href="http://jquery.bassistance.de/api-browser/plugins.html#TreeviewMap">Treeview(<SPAN 
  class="arg-type tooltip">Map</SPAN>)</A> 
  <LI><A 
  href="http://jquery.bassistance.de/api-browser/plugins.html#validateMap">validate(<SPAN 
  class="arg-type tooltip">Map</SPAN>)</A> </LI></UL></DIV></DIV>
<UL id=docs>
  <LI id=:blank><SPAN class=fn><A class=name 
  href="http://jquery.bassistance.de/api-browser/plugins.html#:blank">:blank</A> 
  returns <SPAN class=type><SPAN class=tooltip 
  title="A string of characters.">String</SPAN></SPAN></SPAN> 
  <DIV class=more>
  <DIV class=desc>Expression to filter for blank fields.</DIV>
  <DIV class=example>
  <H3>Example:</H3><PRE><CODE class=javascript>jQuery("input:blank").length</CODE>
</PRE>
  <H4>HTML:</H4><PRE><CODE class=html>&lt;input value="" /&gt;&lt;input value="  " /&gt;&lt;input value="abc" /&gt;</CODE>
</PRE>
  <H4>Result:</H4><PRE><CODE class=html>2</CODE>
</PRE></DIV></DIV>
  <LI id=:filled><SPAN class=fn><A class=name 
  href="http://jquery.bassistance.de/api-browser/plugins.html#:filled">:filled</A> 
  returns <SPAN class=type><SPAN class=tooltip 
  title="A string of characters.">String</SPAN></SPAN></SPAN> 
  <DIV class=more>
  <DIV class=desc>Expression to filter for filled fields.</DIV>
  <DIV class=example>
  <H3>Example:</H3><PRE><CODE class=javascript>jQuery("input:filled").length</CODE>
</PRE>
  <H4>HTML:</H4><PRE><CODE class=html>&lt;input value="" /&gt;&lt;input value="  " /&gt;&lt;input value="abc" /&gt;</CODE>
</PRE>
  <H4>Result:</H4><PRE><CODE class=html>1</CODE>
</PRE></DIV></DIV>
  <LI id=:unchecked><SPAN class=fn><A class=name 
  href="http://jquery.bassistance.de/api-browser/plugins.html#:unchecked">:unchecked</A> 
  returns <SPAN class=type><SPAN class=tooltip 
  title="A string of characters.">String</SPAN></SPAN></SPAN> 
  <DIV class=more>
  <DIV class=desc>Expression to filter unchecked checkboxes or radio 
  buttons.</DIV>
  <DIV class=example>
  <H3>Example:</H3><PRE><CODE class=javascript>jQuery("input:unchecked").length</CODE>
</PRE>
  <H4>HTML:</H4><PRE><CODE class=html>&lt;input type="checkbox" /&gt;&lt;input type="checkbox" checked="checked" /&gt;</CODE>
</PRE>
  <H4>Result:</H4><PRE><CODE class=html>1</CODE>
</PRE></DIV></DIV>
  <LI id=AccordionMap><SPAN class=fn><A class=name 
  href="http://jquery.bassistance.de/api-browser/plugins.html#AccordionMap">Accordion</A>( 
  <SPAN class="arg-type tooltip" 
  title="A Javascript object that contains key/value pairs in the form of properties and values.">Map</SPAN> 
  <SPAN class="arg-name tooltip" 
  title="key/value pairs of optional settings.">options</SPAN> ) returns <SPAN 
  class=type><SPAN class=tooltip 
  title="A jQuery object.">jQuery</SPAN></SPAN></SPAN> 
  <DIV class=more>
  <DIV class=desc>Make the selected elements Accordion widgets.<BR><BR>This is 
  very similar to the Squeezebox widget, only that there can be only one open 
  element.<BR><BR>Semantic requirements:<BR><BR>If the structure of your 
  container is flat with unique tags for header and content elements, eg. a 
  definition list (dl &gt; dt + dd), you don't have to specify any options at 
  all.<BR><BR>If your structure uses the same elements for header and content or 
  uses some kind of nested structure, you have to specify the header elements, 
  eg. via class, see the second example.<BR><BR>Use activate(Number) to change 
  the active content programmatically.<BR><BR>A change event is triggered 
  everytime the accordion changes. Apart from the event object, all arguments 
  are jQuery objects. Arguments: event, newHeader, oldHeader, newContent, 
  oldContent</DIV>
  <H3>Options</H3>
  <UL class=options>
    <LI>active (<SPAN class="arg-type tooltip" 
    title="">String|Element|jQuery|Boolean</SPAN>): Selector for the active 
    element, default is the first child, set to false to display none at start 
    <LI>header (<SPAN class="arg-type tooltip" 
    title="">String|Element|jQuery</SPAN>): Selector for the header element, eg. 
    div.title, a.head, default is the first child's tagname 
    <LI>showSpeed (<SPAN class="arg-type tooltip" 
    title="A string of characters or a number.">String|Number</SPAN>): Speed for 
    the slideIn, default is 'normal' (for numbers: smaller = faster) 
    <LI>hideSpeed (<SPAN class="arg-type tooltip" 
    title="A string of characters or a number.">String|Number</SPAN>): Speed for 
    the slideOut, default is 'normal' (for numbers: smaller = faster) 
    <LI>selectedClass (<SPAN class="arg-type tooltip" 
    title="A string of characters.">String</SPAN>): Class for active header 
    elements, default is 'selected' 
    <LI>alwaysOpen (<SPAN class="arg-type tooltip" 
    title="true or false.">Boolean</SPAN>): Whether there must be one content 
    element open, default is true. 
    <LI>animated (<SPAN class="arg-type tooltip" 
    title="true or false.">Boolean</SPAN>): Set to false to disable animations. 
    Default: true 
    <LI>event (<SPAN class="arg-type tooltip" 
    title="A string of characters.">String</SPAN>): The event on which to 
    trigger the accordion, eg. "mouseover". Default: "click" 
    <LI>cloneFirst (<SPAN class="arg-type tooltip" 
    title="true or false.">Boolean</SPAN>): Use this for a navigation menu where 
    the header element must be available as a selectable target, see related 
    example for more details </LI></UL>
  <DIV class=example>
  <H3>Example:</H3>
  <P>Creates an Accordion from the given definition list</P><PRE><CODE class=javascript>jQuery('#nav').Accordion();</CODE>
</PRE>
  <H4>HTML:</H4><PRE><CODE class=html>&lt;dl id="nav"&gt;
  &lt;dt&gt;Header 1&lt;/dt&gt;
  &lt;dd&gt;Content 1&lt;/dd&gt;
  &lt;dt&gt;Header 2&lt;/dt&gt;
  &lt;dd&gt;Content 2&lt;/dd&gt;
&lt;/dl&gt;</CODE>
</PRE></DIV>
  <DIV class=example>
  <H3>Example:</H3>
  <P>Creates an Accordion from the given div structure</P><PRE><CODE class=javascript>jQuery('#nav').Accordion({
  header: 'div.title'
});</CODE>
</PRE>
  <H4>HTML:</H4><PRE><CODE class=html>&lt;div id="nav"&gt;
 &lt;div&gt;
   &lt;div class="title"&gt;Header 1&lt;/div&gt;
   &lt;div&gt;Content 1&lt;/div&gt;
 &lt;/div&gt;
 &lt;div&gt;
   &lt;div class="title"&gt;Header 2&lt;/div&gt;
   &lt;div&gt;Content 2&lt;/div&gt;
 &lt;/div&gt;
&lt;/div&gt;</CODE>
</PRE></DIV>
  <DIV class=example>
  <H3>Example:</H3>
  <P>Creates an Accordion from the given navigation list, cloning the header 
  element to produce a clickable link. The class as specified in the header 
  selector is removed from the cloned element. Currently this works only with 
  the above structure, the header must be an anchor followed by a list.</P><PRE><CODE class=javascript>jQuery('#nav').Accordion({
  header: '.head',
	 cloneFirst: true
});</CODE>
</PRE>
  <H4>HTML:</H4><PRE><CODE class=html>&lt;ul id="nav"&gt;
  &lt;li&gt;
    &lt;a class="head" href="books/"&gt;Books&lt;/a&gt;
    &lt;ul&gt;
      &lt;li&gt;&lt;a href="books/fantasy/"&gt;Fantasy&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href="books/programming/"&gt;Programming&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;a class="head" href="movies/"&gt;Movies&lt;/a&gt;
    &lt;ul&gt;
      &lt;li&gt;&lt;a href="movies/fantasy/"&gt;Fantasy&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href="movies/programming/"&gt;Programming&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;</CODE>
</PRE></DIV>
  <DIV class=example>
  <H3>Example:</H3>
  <P>Updates the element with id status with the text of the selected header 
  every time the accordion changes</P><PRE><CODE class=javascript>jQuery('#accordion').Accordion().change(function(event, newHeader, oldHeader, newContent, oldContent) {
  jQuery('#status').html(newHeader.text());
});</CODE>
</PRE></DIV></DIV>
  <LI id=activateStringNumber><SPAN class=fn><A class=name 
  href="http://jquery.bassistance.de/api-browser/plugins.html#activateStringNumber">activate</A>( 
  <SPAN class="arg-type tooltip" 
  title="A string of characters or a number.">String|Number</SPAN> <SPAN 
  class="arg-name tooltip" 
  title="(optional) An Integer specifying the zero-based index of the content to be activated or an expression specifying the element to close. Default: closes all.">index</SPAN> 
  ) returns <SPAN class=type><SPAN class=tooltip 
  title="A jQuery object.">jQuery</SPAN></SPAN></SPAN> 
  <DIV class=more>
  <DIV class=desc>Activate a content part of the Accordion 
  programmatically.<BR><BR>The index can be a zero-indexed number to match the 
  position of the header to close or a string expression matching an 
  element.</DIV>
  <DIV class=example>
  <H3>Example:</H3>
  <P>Activate the second content of the Accordion contained in &lt;div 
  id="accordion"&gt;.</P><PRE><CODE class=javascript>jQuery('#accordion').activate(1);</CODE>
</PRE></DIV>
  <DIV class=example>
  <H3>Example:</H3>
  <P>Activate the first element matching the given expression.</P><PRE><CODE class=javascript>jQuery('#accordion').activate("a:first");</CODE>
</PRE></DIV>
  <DIV class=example>
  <H3>Example:</H3>
  <P>Close all content parts of the accordion.</P><PRE><CODE class=javascript>jQuery('#nav').activate();</CODE>
</PRE></DIV></DIV>
  <LI id=autocompleteStringArrayMap><SPAN class=fn><A class=name 
  href="http://jquery.bassistance.de/api-browser/plugins.html#autocompleteStringArrayMap">autocomplete</A>( 
  <SPAN class="arg-type tooltip" title="">String|Array</SPAN> <SPAN 
  class="arg-name tooltip" 
  title="Pass either an URL for remote-autocompletion or an array of data for local auto-completion">urlOrData</SPAN>, 
  <SPAN class="arg-type tooltip" 
  title="A Javascript object that contains key/value pairs in the form of properties and values.">Map</SPAN> 
  <SPAN class="arg-name tooltip" title="Optional settings">options</SPAN> ) 
  returns <SPAN class=type><SPAN class=tooltip 
  title="A jQuery object.">jQuery</SPAN></SPAN></SPAN> 
  <DIV class=more>
  <DIV class=desc>Provide autocomplete for text-inputs or 
  textareas.<BR><BR>Depends on dimensions plugin's offset method for correct 
  positioning of the select box and bgiframe plugin to fix IE's problem with 
  selects.</DIV>
  <H3>Options</H3>
  <UL class=options>
    <LI>inputClass (<SPAN class="arg-type tooltip" 
    title="A string of characters.">String</SPAN>): This class will be added to 
    the input box. Default: "ac_input" 
    <LI>resultsClass (<SPAN class="arg-type tooltip" 
    title="A string of characters.">String</SPAN>): The class for the UL that 
    will contain the result items (result items are LI elements). Default: 
    "ac_results" 
    <LI>loadingClass (<SPAN class="arg-type tooltip" 
    title="A string of characters.">String</SPAN>): The class for the input box 
    while results are being fetched from the server. Default: "ac_loading" 
    <LI>minChars (<SPAN class="arg-type tooltip" 
    title="A valid numeric.">Number</SPAN>): The minimum number of characters a 
    user has to type before the autocompleter activates. Default: 1 
    <LI>delay (<SPAN class="arg-type tooltip" 
    title="A valid numeric.">Number</SPAN>): The delay in milliseconds the 
    autocompleter waits after a keystroke to activate itself. Default: 400 for 
    remote, 10 for local 
    <LI>cacheLength (<SPAN class="arg-type tooltip" 
    title="A valid numeric.">Number</SPAN>): The number of backend query results 
    to store in cache. If set to 1 (the current result), no caching will happen. 
    Do not set below 1. Default: 10 
    <LI>matchSubset (<SPAN class="arg-type tooltip" 
    title="true or false.">Boolean</SPAN>): Whether or not the autocompleter can 
    use a cache for more specific queries. This means that all matches of "foot" 
    are a subset of all matches for "foo". Usually this is true, and using this 
    options decreases server load and increases performance. Only useful with 
    cacheLength settings bigger then one, like 10. Default: true 
    <LI>matchCase (<SPAN class="arg-type tooltip" 
    title="true or false.">Boolean</SPAN>): Whether or not the comparison is 
    case sensitive. Only important only if you use caching. Default: false 
    <LI>matchContains (<SPAN class="arg-type tooltip" 
    title="true or false.">Boolean</SPAN>): Whether or not the comparison looks 
    inside (i.e. does "ba" match "foo bar") the search results. Only important 
    if you use caching. Don't mix with autofill. Default: false 
    <LI>mustMatch (<SPAN class="arg-type tooltip" title="">Booolean</SPAN>): If 
    set to true, the autocompleter will only allow results that are presented by 
    the backend. Note that illegal values result in an empty input box. Default: 
    false 
    <LI>extraParams (<SPAN class="arg-type tooltip" 
    title="A simple Javascript object..">Object</SPAN>): Extra parameters for 
    the backend. If you were to specify { bar:4 }, the autocompleter would call 
    my_autocomplete_backend.php?q=foo&amp;bar=4 (assuming the input box contains 
    "foo"). Default: {} 
    <LI>selectFirst (<SPAN class="arg-type tooltip" 
    title="true or false.">Boolean</SPAN>): If this is set to true, the first 
    autocomplete value will be automatically selected on tab/return, even if it 
    has not been handpicked by keyboard or mouse action. If there is a 
    handpicked (highlighted) result, that result will take precedence. Default: 
    true 
    <LI>formatItem (<SPAN class="arg-type tooltip" 
    title="">Function|Boolean</SPAN>): Provides advanced markup for an item. For 
    each row of results, this function will be called. If false is returned, the 
    row is skipped. Otherwise the returned value will be displayed inside an LI 
    element in the results list. Autocompleter will provide 3 parameters: the 
    results row, the position of the row in the list of results (starting at 1), 
    and the number of items in the list of results. Default: none, assumes that 
    a single row contains a single value. 
    <LI>formatResult (<SPAN class="arg-type tooltip" 
    title="A reference to a Javascript function.">Function</SPAN>): Similar to 
    formatResult, but provides the formatting for the value to be put into the 
    input field. Again three arguments: Data, position (starting with one) and 
    total number of data. Default: none, assumes either plain data to use as 
    result or uses the same value as provided by formatItem. 
    <LI>multiple (<SPAN class="arg-type tooltip" 
    title="true or false.">Boolean</SPAN>): Whether to allow more then one 
    autocomplted-value to enter. Default: false 
    <LI>multipleSeparator (<SPAN class="arg-type tooltip" 
    title="A string of characters.">String</SPAN>): Seperator to put between 
    values when using multiple option. Default: ", " 
    <LI>width (<SPAN class="arg-type tooltip" 
    title="A valid numeric.">Number</SPAN>): Specify a custom width for the 
    select box. Default: width of the input element 
    <LI>autoFill (<SPAN class="arg-type tooltip" 
    title="true or false.">Boolean</SPAN>): Fill the textinput while still 
    selecting a value, replacing the value if more is type or something else is 
    selected. Default: false 
    <LI>max (<SPAN class="arg-type tooltip" 
    title="A valid numeric.">Number</SPAN>): Limit the number of items in the 
    select box. Is also send as a "limit" parameter with a remote request. 
    Default: 10 
    <LI>highlight (<SPAN class="arg-type tooltip" 
    title="">Boolean|Function</SPAN>): Whether and how to highlight matches in 
    the select box. Set to false to disable. Set to a function to customize. The 
    function gets the value as the first argument and the search term as the 
    second and must return the formatted value. Default: Wraps the search term 
    in a &lt;strong&gt; element 
    <LI>moreItems (<SPAN class="arg-type tooltip" 
    title="">Boolean|String</SPAN>): Whether or not to show the "more items" 
    text if there are more items than are currently be displayed. Set to false 
    to disable. Set to a string to customize the html. Default: Displays "more", 
    surrounded with three arrows. </LI></UL>
  <DIV class=example>
  <H3>Example:</H3>
  <P>Autocomplete a text-input with remote data. For small to giant datasets. 
  When the user starts typing, a request is send to the specified backend 
  ("my_autocomplete_backend.php"), with a GET parameter named q that contains 
  the current value of the input box and a paremeter "limit" with the value 
  specified for the max option. A value of "foo" would result in this request 
  url: my_autocomplete_backend.php?q=foo&amp;limit=10 The result must return 
  with one value on each line. The result is presented in the order the backend 
  sends it.</P><PRE><CODE class=javascript>$("#input_box").autocomplete("my_autocomplete_backend.php");</CODE>
</PRE>
  <H4>HTML:</H4><PRE><CODE class=html>&lt;input id="input_box" /&gt;</CODE>
</PRE></DIV>
  <DIV class=example>
  <H3>Example:</H3>
  <P>Autcomplete a text-input with local data. For small datasets.</P><PRE><CODE class=javascript>$("#input_box").autocomplete(["Cologne", "Berlin", "Munich"]);</CODE>
</PRE>
  <H4>HTML:</H4><PRE><CODE class=html>&lt;input id="input_box" /&gt;</CODE>
</PRE></DIV>
  <DIV class=example>
  <H3>Example:</H3>
  <P>Autcomplete a text-input with data received via AJAX. For small to medium 
  sized datasets.</P><PRE><CODE class=javascript>$.getJSON("my_backend.php", function(data) {
  $("#input_box").autocomplete(data);
});</CODE>
</PRE>
  <H4>HTML:</H4><PRE><CODE class=html>&lt;input id="input_box" /&gt;</CODE>
</PRE></DIV>
  <DIV class=example>
  <H3>Example:</H3>
  <P>Autcomplete a textarea with local data (for small datasets). Once the user 
  chooses one value, a separator is appended (by default a comma, see 
  multipleSeparator option) and more values are autocompleted.</P><PRE><CODE class=javascript>$("#mytextarea").autocomplete(["Cologne", "Berlin", "Munich"], {
 multiple: true
});</CODE>
</PRE>
  <H4>HTML:</H4><PRE><CODE class=html>&lt;textarea id="mytextarea" /&gt;</CODE>
</PRE></DIV></DIV>
  <LI id=flushCache><SPAN class=fn><A class=name 
  href="http://jquery.bassistance.de/api-browser/plugins.html#flushCache">flushCache</A>( 
  ) returns <SPAN class=type><SPAN class=tooltip 
  title="A jQuery object.">jQuery</SPAN></SPAN></SPAN> 
  <DIV class=more>
  <DIV class=desc>Flush (empty) the cache of matched input's 
  autocompleters.</DIV>
  <DIV class=example>
  <H3>Example:</H3><PRE><CODE class=javascript>jQuery('input#suggest').flushCache();</CODE>
</PRE></DIV></DIV>
  <LI id=htmlStringString><SPAN class=fn><A class=name 
  href="http://jquery.bassistance.de/api-browser/plugins.html#htmlStringString">html</A>( 
  <SPAN class="arg-type tooltip" title="A string of characters.">String</SPAN> 
  <SPAN class="arg-name tooltip" title="The HTML to set and format">html</SPAN>, 
  <SPAN class="arg-type tooltip" title="A string of characters.">String</SPAN> 
  <SPAN class="arg-name tooltip" 
  title="Any number of arguments to place into the HTML">[...]</SPAN> ) returns 
  <SPAN class=type><SPAN class=tooltip 
  title="A string of characters.">String</SPAN></SPAN></SPAN> 
  <DIV class=more>
  <DIV class=desc>Extends jQuery's built-in html method to accept additional 
  arguments and use them to replace any percent-signs found in the html 
  string.</DIV>
  <DIV class=example>
  <H3>Example:</H3>
  <P>Basic usage example</P><PRE><CODE class=javascript>jQuery("div").html("Hi &lt;strong&gt;%&lt;/strong&gt; in the year %?", name, new Date().getYear() + 1900);</CODE>
</PRE>
  <H4>Result:</H4><PRE><CODE class=html>[ &lt;div&gt;Hi &lt;strong&gt;Peter&lt;/strong&gt; in the year 2007?&lt;/div&gt; ]</CODE>
</PRE></DIV>
  <DIV class=example>
  <H3>Example:</H3>
  <P>Escaping of placeholder</P><PRE><CODE class=javascript>jQuery("div").html("% %% done.", 56);</CODE>
</PRE>
  <H4>Result:</H4><PRE><CODE class=html>[ &lt;div&gt;56 % done.&lt;/div&gt; ]</CODE>
</PRE></DIV></DIV>
  <LI id=jQueryAccordionsetDefaultsMap><SPAN class=fn><A class=name 
  href="http://jquery.bassistance.de/api-browser/plugins.html#jQueryAccordionsetDefaultsMap">jQuery.Accordion.setDefaults</A>( 
  <SPAN class="arg-type tooltip" 
  title="A Javascript object that contains key/value pairs in the form of properties and values.">Map</SPAN> 
  <SPAN class="arg-name tooltip" 
  title="key/value pairs of optional settings, see Accordion() for details">options</SPAN> 
  ) returns <SPAN class=type><SPAN class=tooltip 
  title="A jQuery object.">jQuery</SPAN></SPAN></SPAN> 
  <DIV class=more>
  <DIV class=desc>Override the default settings of the Accordion. Affects only 
  following plugin calls.</DIV>
  <DIV class=example>
  <H3>Example:</H3><PRE><CODE class=javascript>jQuery.Accordion.setDefaults({
	showSpeed: 1000,
	hideSpeed: 150
});</CODE>
</PRE></DIV></DIV>
  <LI id=jQueryformatStringArrayString><SPAN class=fn><A class=name 
  href="http://jquery.bassistance.de/api-browser/plugins.html#jQueryformatStringArrayString">jQuery.format</A>( 
  <SPAN class="arg-type tooltip" title="A string of characters.">String</SPAN> 
  <SPAN class="arg-name tooltip" 
  title="A template, containing percent-characters to indicate placeholders">value</SPAN>, 
  <SPAN class="arg-type tooltip" 
  title="An Array of strings.">Array&lt;String&gt;</SPAN> <SPAN 
  class="arg-name tooltip" 
  title="An array of strings to replace the placeholders with">[...]</SPAN> ) 
  returns <SPAN class=type><SPAN class=tooltip 
  title="A string of characters.">String</SPAN></SPAN></SPAN> 
  <DIV class=more>
  <DIV class=desc>The formatter used by extended text() and html(). It replaces 
  all placeholders found in the first argument by the elements of the array from 
  the second argument. Would be the base to extend other HTML transforming 
  methods as append().</DIV></DIV>
  <LI id=jQueryvalidatoraddMethodStringFunctionString><SPAN class=fn><A 
  class=name 
  href="http://jquery.bassistance.de/api-browser/plugins.html#jQueryvalidatoraddMethodStringFunctionString">jQuery.validator.addMethod</A>( 
  <SPAN class="arg-type tooltip" title="A string of characters.">String</SPAN> 
  <SPAN class="arg-name tooltip" 
  title="The name of the method, used to identify and referencing it, must be a valid javascript identifier">name</SPAN>, 
  <SPAN class="arg-type tooltip" 
  title="A reference to a Javascript function.">Function</SPAN> <SPAN 
  class="arg-name tooltip" 
  title="The actual method implementation, returning true if an element is valid">rule</SPAN>, 
  <SPAN class="arg-type tooltip" title="A string of characters.">String</SPAN> 
  <SPAN class="arg-name tooltip" 
  title="The default message to display for this method">message</SPAN> ) 
  returns <SPAN class=type><SPAN class=tooltip 
  title="">undefined</SPAN></SPAN></SPAN> 
  <DIV class=more>
  <DIV class=desc>Add a new validation method. It must consist of a name (must 
  be a legal javascript identifier), a function and a default 
  message.<BR><BR>Please note: While the temptation is great to add a regex 
  method that checks it's paramter against the value, it is much cleaner to 
  encapsulate those regular expressions inside their own method. If you need 
  lots of slightly different expressions, try to extract a common 
  parameter.<BR><BR>A library of regular expressions: 
  http://regexlib.com/DisplayPatterns.aspx</DIV>
  <DIV class=example>
  <H3>Example:</H3>
  <P>Adds a method that checks if the value starts with 
  http://mycorporatedomain.com</P><PRE><CODE class=javascript>jQuery.validator.addMethod("domain", function(value) {
  return /^http://mycorporatedomain.com/.test(value);
}, "Please specify the correct domain for your documents");</CODE>
</PRE></DIV>
  <DIV class=example>
  <H3>Example:</H3>
  <P>Adds a not-required method...</P><PRE><CODE class=javascript>jQuery.validator.addMethod("math", function(value, element, params) {
 return this.required(value, element) || value == params[0] + params[1];
}, "Please enter the correct value for this simple question.");</CODE>
</PRE></DIV></DIV>
  <LI id=jQueryvalidatormessages><SPAN class=fn><A class=name 
  href="http://jquery.bassistance.de/api-browser/plugins.html#jQueryvalidatormessages">jQuery.validator.messages</A> 
  returns <SPAN class=type><SPAN class=tooltip 
  title="A string of characters.">String</SPAN></SPAN></SPAN> 
  <DIV class=more>
  <DIV class=desc>Default messages for all default methods.<BR><BR>Use 
  addMethod() to add methods with messages.<BR><BR>Replace these messages for 
  localization.</DIV></DIV>
  <LI id=jQueryvalidatormethodsStringElementObject><SPAN class=fn><A class=name 
  href="http://jquery.bassistance.de/api-browser/plugins.html#jQueryvalidatormethodsStringElementObject">jQuery.validator.methods</A> 
  returns <SPAN class=type><SPAN class=tooltip title="">Object&lt;String, 
  Function(String,Element,Object):Boolean&gt;</SPAN></SPAN></SPAN> 
  <DIV class=more>
  <DIV class=desc>Defines a standard set of useful validation 
  methods.<BR><BR>Use jQuery.validator.addMethod() to add your own 
  methods.<BR><BR>If "all kind of text inputs" is mentioned for any if the 
  methods defined here, it refers to input elements of type text, password and 
  file and textareas.</DIV></DIV>
  <LI id=jQueryvalidatormethodsaccept><SPAN class=fn><A class=name 
  href="http://jquery.bassistance.de/api-browser/plugins.html#jQueryvalidatormethodsaccept">jQuery.validator.methods.accept</A>( 
  ) returns <SPAN class=type><SPAN class=tooltip 
  title="true or false.">Boolean</SPAN></SPAN></SPAN> 
  <DIV class=more>
  <DIV class=desc>Returns true if the value ends with one of the specified file 
  extensions. If nothing is specified, only images are allowed (default-param: 
  "png|jpe?g|gif").<BR><BR>Works with all kind of text inputs.</DIV>
  <DIV class=example>
  <H3>Example:</H3>
  <P>Declares an optional file input element whose value must ends with '.png', 
  '.jpg', '.jpeg' or '.gif'.</P><PRE><CODE class=javascript>&lt;input type="file" name="avatar" class="{accept:true}" /&gt;</CODE>
</PRE></DIV>
  <DIV class=example>
  <H3>Example:</H3>
  <P>Declares an optional file input element whose value must ends with '.txt' 
  or '.doc' or '.docx'.</P><PRE><CODE class=javascript>&lt;input type="file" name="avatar" class="{accept:'txt|docx?'}" /&gt;</CODE>
</PRE></DIV></DIV>
  <LI id=jQueryvalidatormethodscreditcard><SPAN class=fn><A class=name 
  href="http://jquery.bassistance.de/api-browser/plugins.html#jQueryvalidatormethodscreditcard">jQuery.validator.methods.creditcard</A>( 
  ) returns <SPAN class=type><SPAN class=tooltip 
  title="true or false.">Boolean</SPAN></SPAN></SPAN> 
  <DIV class=more>
  <DIV class=desc>Return true, if the value is a valid credit card 
  number.<BR><BR>Works with all kind of text inputs.</DIV>
  <DIV class=example>
  <H3>Example:</H3>
  <P>Declares a required input element whose value must be a valid credit card 
  number (ignoring any non-digts).</P><PRE><CODE class=javascript>&lt;input name="cc1" class="{required:true,creditcard:true}" /&gt;</CODE>
</PRE></DIV>
  <DIV class=example>
  <H3>Example:</H3>
  <P>Declares a required input element whose value must be a valid credit card 
  number. No spaces or dashes allowed.</P><PRE><CODE class=javascript>&lt;input name="cc2" class="{required:true,digits:true,creditcard:true}" /&gt;</CODE>
</PRE></DIV></DIV>
  <LI id=jQueryvalidatormethodsdate><SPAN class=fn><A class=name 
  href="http://jquery.bassistance.de/api-browser/plugins.html#jQueryvalidatormethodsdate">jQuery.validator.methods.date</A>( 
  ) returns <SPAN class=type><SPAN class=tooltip 
  title="true or false.">Boolean</SPAN></SPAN></SPAN> 
  <DIV class=more>
  <DIV class=desc>Return true, if the value is a valid date. Uses JavaScripts 
  built-in Date to test if the date is valid, and is therefore very 
  limited.<BR><BR>Works with all kind of text inputs.</DIV>
  <DIV class=example>
  <H3>Example:</H3>
  <P>Declares an optional input element whose value must be a valid date (or 
  none at all).</P><PRE><CODE class=javascript>&lt;input name="birthdate" class="{date:true}" /&gt;</CODE>
</PRE></DIV>
  <DIV class=example>
  <H3>Example:</H3>
  <P>Declares an input element whose value must be a valid date.</P><PRE><CODE class=javascript>&lt;input name="birthdate" class="{required:true,date:true}" /&gt;</CODE>
</PRE></DIV></DIV>
  <LI id=jQueryvalidatormethodsdate><SPAN class=fn><A class=name 
  href="http://jquery.bassistance.de/api-browser/plugins.html#jQueryvalidatormethodsdate">jQuery.validator.methods.date</A>( 
  ) returns <SPAN class=type><SPAN class=tooltip 
  title="true or false.">Boolean</SPAN></SPAN></SPAN> 
  <DIV class=more>
  <DIV class=desc>Return true, if the value is a valid date, according to ISO 
  date standard.<BR><BR>Works with all kind of text inputs.</DIV>
  <DIV class=example>
  <H3>Example:</H3><PRE><CODE class=javascript>jQuery.validator.methods.date("1990/01/01")</CODE>
</PRE>
  <H4>Result:</H4><PRE><CODE class=html>true</CODE>
</PRE></DIV>
  <DIV class=example>
  <H3>Example:</H3><PRE><CODE class=javascript>jQuery.validator.methods.date("1990-01-01")</CODE>
</PRE>
  <H4>Result:</H4><PRE><CODE class=html>true</CODE>
</PRE></DIV>
  <DIV class=example>
  <H3>Example:</H3><PRE><CODE class=javascript>jQuery.validator.methods.date("01.01.1990")</CODE>
</PRE>
  <H4>Result:</H4><PRE><CODE class=html>false</CODE>
</PRE></DIV>
  <DIV class=example>
  <H3>Example:</H3>
  <P>Declares an optional input element whose value must be a valid ISO date (or 
  none at all).</P><PRE><CODE class=javascript>&lt;input name="birthdate" class="{dateISO:true}" /&gt;</CODE>
</PRE></DIV></DIV>
  <LI id=jQueryvalidatormethodsdateDE><SPAN class=fn><A class=name 
  href="http://jquery.bassistance.de/api-browser/plugins.html#jQueryvalidatormethodsdateDE">jQuery.validator.methods.dateDE</A>( 
  ) returns <SPAN class=type><SPAN class=tooltip 
  title="true or false.">Boolean</SPAN></SPAN></SPAN> 
  <DIV class=more>
  <DIV class=desc>Return true, if the value is a valid date. Supports german 
  dates (29.04.1994 or 1.1.2006). Doesn't make any sanity checks.<BR><BR>Works 
  with all kind of text inputs.</DIV>
  <DIV class=example>
  <H3>Example:</H3><PRE><CODE class=javascript>jQuery.validator.methods.date("1990/01/01")</CODE>
</PRE>
  <H4>Result:</H4><PRE><CODE class=html>false</CODE>
</PRE></DIV>
  <DIV class=example>
  <H3>Example:</H3><PRE><CODE class=javascript>jQuery.validator.methods.date("01.01.1990")</CODE>
</PRE>
  <H4>Result:</H4><PRE><CODE class=html>true</CODE>
</PRE></DIV>
  <DIV class=example>
  <H3>Example:</H3><PRE><CODE class=javascript>jQuery.validator.methods.date("0.1.2345")</CODE>
</PRE>
  <H4>Result:</H4><PRE><CODE class=html>true</CODE>
</PRE></DIV>
  <DIV class=example>
  <H3>Example:</H3>
  <P>Declares an optional input element whose value must be a valid german date 
  (or none at all).</P><PRE><CODE class=javascript>&lt;input name="geburtstag" class="{dateDE:true}" /&gt;</CODE>
</PRE></DIV></DIV>
  <LI id=jQueryvalidatormethodsdigits><SPAN class=fn><A class=name 
  href="http://jquery.bassistance.de/api-browser/plugins.html#jQueryvalidatormethodsdigits">jQuery.validator.methods.digits</A>( 
  ) returns <SPAN class=type><SPAN class=tooltip 
  title="true or false.">Boolean</SPAN></SPAN></SPAN> 
  <DIV class=more>
  <DIV class=desc>Returns true if the value contains only digits.<BR><BR>Works 
  with all kind of text inputs.</DIV>
  <DIV class=example>
  <H3>Example:</H3>
  <P>Declares an optional input element whose value must contain only digits (or 
  none at all).</P><PRE><CODE class=javascript>&lt;input name="serialnumber" class="{digits:true}" /&gt;</CODE>
</PRE></DIV></DIV>
  <LI id=jQueryvalidatormethodsdigitsString><SPAN class=fn><A class=name 
  href="http://jquery.bassistance.de/api-browser/plugins.html#jQueryvalidatormethodsdigitsString">jQuery.validator.methods.digits</A>( 
  <SPAN class="arg-type tooltip" title="A string of characters.">String</SPAN> 
  <SPAN class="arg-name tooltip" title="A jQuery expression">selection</SPAN> ) 
  returns <SPAN class=type><SPAN class=tooltip 
  title="true or false.">Boolean</SPAN></SPAN></SPAN> 
  <DIV class=more>
  <DIV class=desc>Returns true if the value has the same value as the element 
  specified by the first parameter.<BR><BR>Keep the expression simple to avoid 
  spaces when using metadata.<BR><BR>Works with all kind of text inputs.</DIV>
  <DIV class=example>
  <H3>Example:</H3>
  <P>Declares two input elements: The first must contain a valid email address, 
  the second must contain the same adress, enter once more. The paramter is a 
  expression used via jQuery to select the element.</P><PRE><CODE class=javascript>&lt;input name="email" id="email" class="{required:true,email:true'}" /&gt;
&lt;input name="emailAgain" class="{equalTo:'#email'}" /&gt;</CODE>
</PRE></DIV></DIV>
  <LI id=jQueryvalidatormethodsemail><SPAN class=fn><A class=name 
  href="http://jquery.bassistance.de/api-browser/plugins.html#jQueryvalidatormethodsemail">jQuery.validator.methods.email</A>( 
  ) returns <SPAN class=type><SPAN class=tooltip 
  title="true or false.">Boolean</SPAN></SPAN></SPAN> 
  <DIV class=more>
  <DIV class=desc>Return true, if the value is not a valid email 
  address.<BR><BR>Works with all kind of text inputs.</DIV>
  <DIV class=example>
  <H3>Example:</H3>
  <P>Declares an optional input element whose value must be a valid email 
  address (or none at all).</P><PRE><CODE class=javascript>&lt;input name="email1" class="{email:true}" /&gt;</CODE>
</PRE></DIV>
  <DIV class=example>
  <H3>Example:</H3>
  <P>Declares an input element whose value must be a valid email address.</P><PRE><CODE class=javascript>&lt;input name="email1" class="{required:true,email:true}" /&gt;</CODE>
</PRE></DIV></DIV>
  <LI id=jQueryvalidatormethodsmaxLengthNumber><SPAN class=fn><A class=name 
  href="http://jquery.bassistance.de/api-browser/plugins.html#jQueryvalidatormethodsmaxLengthNumber">jQuery.validator.methods.maxLength</A>( 
  <SPAN class="arg-type tooltip" title="A valid numeric.">Number</SPAN> <SPAN 
  class="arg-name tooltip" title="">max</SPAN> ) returns <SPAN class=type><SPAN 
  class=tooltip title="true or false.">Boolean</SPAN></SPAN></SPAN> 
  <DIV class=more>
  <DIV class=desc>Return false, if the element is<BR><BR>- some kind of text 
  input and its value is too big<BR><BR>- a set of checkboxes has too many boxes 
  checked<BR><BR>- a select and has too many options selected<BR><BR>Works with 
  all kind of text inputs, checkboxes and selects.</DIV>
  <DIV class=example>
  <H3>Example:</H3>
  <P>Declares an input element with at most 5 characters.</P><PRE><CODE class=javascript>&lt;input name="firstname" class="{maxLength:5}" /&gt;</CODE>
</PRE></DIV>
  <DIV class=example>
  <H3>Example:</H3>
  <P>Declares an input element that must have at least one and at most 5 
  characters.</P><PRE><CODE class=javascript>&lt;input name="firstname" class="{required:true,maxLength:5}" /&gt;</CODE>
</PRE></DIV></DIV>
  <LI id=jQueryvalidatormethodsmaxValueNumber><SPAN class=fn><A class=name 
  href="http://jquery.bassistance.de/api-browser/plugins.html#jQueryvalidatormethodsmaxValueNumber">jQuery.validator.methods.maxValue</A>( 
  <SPAN class="arg-type tooltip" title="A valid numeric.">Number</SPAN> <SPAN 
  class="arg-name tooltip" title="">max</SPAN> ) returns <SPAN class=type><SPAN 
  class=tooltip title="true or false.">Boolean</SPAN></SPAN></SPAN> 
  <DIV class=more>
  <DIV class=desc>Return true, if the value is less than or equal to the 
  specified maximum.<BR><BR>Works with all kind of text inputs.</DIV>
  <DIV class=example>
  <H3>Example:</H3>
  <P>Declares an optional input element whose value must be at most 16 (or none 
  at all).</P><PRE><CODE class=javascript>&lt;input name="age" class="{maxValue:16}" /&gt;</CODE>
</PRE></DIV>
  <DIV class=example>
  <H3>Example:</H3>
  <P>Declares an input element whose required value must be at most 16.</P><PRE><CODE class=javascript>&lt;input name="age" class="{required:true,maxValue:16}" /&gt;</CODE>
</PRE></DIV></DIV>
  <LI id=jQueryvalidatormethodsminLengthNumber><SPAN class=fn><A class=name 
  href="http://jquery.bassistance.de/api-browser/plugins.html#jQueryvalidatormethodsminLengthNumber">jQuery.validator.methods.minLength</A>( 
  <SPAN class="arg-type tooltip" title="A valid numeric.">Number</SPAN> <SPAN 
  class="arg-name tooltip" title="">min</SPAN> ) returns <SPAN class=type><SPAN 
  class=tooltip title="true or false.">Boolean</SPAN></SPAN></SPAN> 
  <DIV class=more>
  <DIV class=desc>Return false, if the element is<BR><BR>- some kind of text 
  input and its value is too short<BR><BR>- a set of checkboxes has not enough 
  boxes checked<BR><BR>- a select and has not enough options 
  selected<BR><BR>Works with all kind of text inputs, checkboxes and 
  select.</DIV>
  <DIV class=example>
  <H3>Example:</H3>
  <P>Declares an optional input element with at least 5 characters (or none at 
  all).</P><PRE><CODE class=javascript>&lt;input name="firstname" class="{minLength:5}" /&gt;</CODE>
</PRE></DIV>
  <DIV class=example>
  <H3>Example:</H3>
  <P>Declares an input element that must have at least 5 characters.</P><PRE><CODE class=javascript>&lt;input name="firstname" class="{required:true,minLength:5}" /&gt;</CODE>
</PRE></DIV>
  <DIV class=example>
  <H3>Example:</H3>
  <P>Specifies a group of checkboxes. To validate, at least two checkboxes must 
  be selected.</P><PRE><CODE class=javascript>&lt;fieldset&gt;
	&lt;legend&gt;Spam&lt;/legend&gt;
	&lt;label for="spam_email"&gt;
		&lt;input type="checkbox" id="spam_email" value="email" name="spam" validate="required:true,minLength:2" /&gt;
		Spam via E-Mail
	&lt;/label&gt;
	&lt;label for="spam_phone"&gt;
		&lt;input type="checkbox" id="spam_phone" value="phone" name="spam" /&gt;
		Spam via Phone
	&lt;/label&gt;
	&lt;label for="spam_mail"&gt;
		&lt;input type="checkbox" id="spam_mail" value="mail" name="spam" /&gt;
		Spam via Mail
	&lt;/label&gt;
	&lt;label for="spam" class="error"&gt;Please select at least two types of spam.&lt;/label&gt;
&lt;/fieldset&gt;</CODE>
</PRE></DIV></DIV>
  <LI id=jQueryvalidatormethodsminValueNumber><SPAN class=fn><A class=name 
  href="http://jquery.bassistance.de/api-browser/plugins.html#jQueryvalidatormethodsminValueNumber">jQuery.validator.methods.minValue</A>( 
  <SPAN class="arg-type tooltip" title="A valid numeric.">Number</SPAN> <SPAN 
  class="arg-name tooltip" title="">min</SPAN> ) returns <SPAN class=type><SPAN 
  class=tooltip title="true or false.">Boolean</SPAN></SPAN></SPAN> 
  <DIV class=more>
  <DIV class=desc>Return true, if the value is greater than or equal to the 
  specified minimum.<BR><BR>Works with all kind of text inputs.</DIV>
  <DIV class=example>
  <H3>Example:</H3>
  <P>Declares an optional input element whose value must be at least 16 (or none 
  at all).</P><PRE><CODE class=javascript>&lt;input name="age" class="{minValue:16}" /&gt;</CODE>
</PRE></DIV>
  <DIV class=example>
  <H3>Example:</H3>
  <P>Declares an input element whose value must be at least 16.</P><PRE><CODE class=javascript>&lt;input name="age" class="{required:true,minValue:16}" /&gt;</CODE>
</PRE></DIV></DIV>
  <LI id=jQueryvalidatormethodsnumber><SPAN class=fn><A class=name 
  href="http://jquery.bassistance.de/api-browser/plugins.html#jQueryvalidatormethodsnumber">jQuery.validator.methods.number</A>( 
  ) returns <SPAN class=type><SPAN class=tooltip 
  title="true or false.">Boolean</SPAN></SPAN></SPAN> 
  <DIV class=more>
  <DIV class=desc>Return true, if the value is a valid number. Checks for 
  international number format, eg. 100,000.59<BR><BR>Works with all kind of text 
  inputs.</DIV>
  <DIV class=example>
  <H3>Example:</H3>
  <P>Declares an optional input element whose value must be a valid number (or 
  none at all).</P><PRE><CODE class=javascript>&lt;input name="amount" class="{number:true}" /&gt;</CODE>
</PRE></DIV></DIV>
  <LI id=jQueryvalidatormethodsnumberDE><SPAN class=fn><A class=name 
  href="http://jquery.bassistance.de/api-browser/plugins.html#jQueryvalidatormethodsnumberDE">jQuery.validator.methods.numberDE</A>( 
  ) returns <SPAN class=type><SPAN class=tooltip 
  title="true or false.">Boolean</SPAN></SPAN></SPAN> 
  <DIV class=more>
  <DIV class=desc>Return true, if the value is a valid number.<BR><BR>Works with 
  all kind of text inputs.<BR><BR>Checks for german numbers (100.000,59)</DIV>
  <DIV class=example>
  <H3>Example:</H3>
  <P>Declares an optional input element whose value must be a valid german 
  number (or none at all).</P><PRE><CODE class=javascript>&lt;input name="menge" class="{numberDE:true}" /&gt;</CODE>
</PRE></DIV></DIV>
  <LI id=jQueryvalidatormethodsrangeLengthArrayNumber><SPAN class=fn><A 
  class=name 
  href="http://jquery.bassistance.de/api-browser/plugins.html#jQueryvalidatormethodsrangeLengthArrayNumber">jQuery.validator.methods.rangeLength</A>( 
  <SPAN class="arg-type tooltip" title="">Array&lt;Number&gt;</SPAN> <SPAN 
  class="arg-name tooltip" title="">min/max</SPAN> ) returns <SPAN 
  class=type><SPAN class=tooltip 
  title="true or false.">Boolean</SPAN></SPAN></SPAN> 
  <DIV class=more>
  <DIV class=desc>Return false, if the element is<BR><BR>- some kind of text 
  input and its value is too short or too long<BR><BR>- a set of checkboxes has 
  not enough or too many boxes checked<BR><BR>- a select and has not enough or 
  too many options selected<BR><BR>Works with all kind of text inputs, 
  checkboxes and selects.</DIV>
  <DIV class=example>
  <H3>Example:</H3>
  <P>Declares an optional input element with at least 3 and at most 5 characters 
  (or none at all).</P><PRE><CODE class=javascript>&lt;input name="firstname" class="{rangeLength:[3,5]}" /&gt;</CODE>
</PRE></DIV>
  <DIV class=example>
  <H3>Example:</H3>
  <P>Declares an input element that must have at least 3 and at most 5 
  characters.</P><PRE><CODE class=javascript>&lt;input name="firstname" class="{required:true,rangeLength:[3,5]}" /&gt;</CODE>
</PRE></DIV>
  <DIV class=example>
  <H3>Example:</H3>
  <P>Specifies a select that must have at least two but no more then three 
  options selected.</P><PRE><CODE class=javascript>&lt;select id="cars" class="{required:true,rangeLength:[2,3]}" multiple="multiple"&gt;
	&lt;option value="m_sl"&gt;Mercedes SL&lt;/option&gt;
	&lt;option value="o_c"&gt;Opel Corsa&lt;/option&gt;
	&lt;option value="vw_p"&gt;VW Polo&lt;/option&gt;
	&lt;option value="t_s"&gt;Titanic Skoda&lt;/option&gt;
&lt;/select&gt;</CODE>
</PRE></DIV></DIV>
  <LI id=jQueryvalidatormethodsrangeValueArrayNumber><SPAN class=fn><A 
  class=name 
  href="http://jquery.bassistance.de/api-browser/plugins.html#jQueryvalidatormethodsrangeValueArrayNumber">jQuery.validator.methods.rangeValue</A>( 
  <SPAN class="arg-type tooltip" title="">Array&lt;Number&gt;</SPAN> <SPAN 
  class="arg-name tooltip" title="">min/max</SPAN> ) returns <SPAN 
  class=type><SPAN class=tooltip 
  title="true or false.">Boolean</SPAN></SPAN></SPAN> 
  <DIV class=more>
  <DIV class=desc>Return true, if the value is in the specified 
  range.<BR><BR>Works with all kind of text inputs.</DIV>
  <DIV class=example>
  <H3>Example:</H3>
  <P>Declares an optional input element whose value must be at least 4 and at 
  most 12 (or none at all).</P><PRE><CODE class=javascript>&lt;input name="age" class="{rangeValue:[4,12]}" /&gt;</CODE>
</PRE></DIV>
  <DIV class=example>
  <H3>Example:</H3>
  <P>Declares an input element whose required value must be at least 4 and at 
  most 12.</P><PRE><CODE class=javascript>&lt;input name="age" class="{required:true,rangeValue:[4,12]}" /&gt;</CODE>
</PRE></DIV></DIV>
  <LI id=jQueryvalidatormethodsrequiredStringElementBooleanStringFunction><SPAN 
  class=fn><A class=name 
  href="http://jquery.bassistance.de/api-browser/plugins.html#jQueryvalidatormethodsrequiredStringElementBooleanStringFunction">jQuery.validator.methods.required</A>( 
  <SPAN class="arg-type tooltip" title="A string of characters.">String</SPAN> 
  <SPAN class="arg-name tooltip" 
  title="The value of the element to check">value</SPAN>, <SPAN 
  class="arg-type tooltip" 
  title="The Javascript object representation of a DOM Element.">Element</SPAN> 
  <SPAN class="arg-name tooltip" title="The element to check">element</SPAN>, 
  <SPAN class="arg-type tooltip" title="">Boolean|String|Function</SPAN> <SPAN 
  class="arg-name tooltip" 
  title="A boolean &quot;true&quot; makes a field always required; An expression (String) is evaluated in the context of the element's form, making the field required only if the expression returns more then one element. The function is executed with the element as it's only argument: If it returns true, the element is required.">param</SPAN> 
  ) returns <SPAN class=type><SPAN class=tooltip 
  title="true or false.">Boolean</SPAN></SPAN></SPAN> 
  <DIV class=more>
  <DIV class=desc>Return false if the element is empty.<BR><BR>Works with all 
  kind of text inputs, selects, checkboxes and radio buttons.<BR><BR>To force a 
  user to select an option from a select box, provide an empty options like 
  &lt;option value=""&gt;Choose...&lt;/option&gt;</DIV>
  <DIV class=example>
  <H3>Example:</H3>
  <P>Declares an input element that is required.</P><PRE><CODE class=javascript>&lt;input name="firstname" class="{required:true}" /&gt;</CODE>
</PRE></DIV>
  <DIV class=example>
  <H3>Example:</H3>
  <P>Declares an input element required, but only if a checkbox with name 
  'other' is checked. In other words: As long 'other' isn't checked, the details 
  field is valid. Note: The expression is evaluated in the context of the 
  current form.</P><PRE><CODE class=javascript>&lt;input id="other" type="radio" /&gt;
&lt;input name="details" class="{required:'input[@name=other]:checked'}" /&gt;</CODE>
</PRE></DIV>
  <DIV class=example>
  <H3>Example:</H3>
  <P>Declares an input element "details" required, but only if two other fields 
  are checked.</P><PRE><CODE class=javascript>jQuery("#myform").validate({
	rules: {
		details: {
			required: function(element) {
				return jQuery("#other").is(":checked") &amp;&amp; jQuery("#other2").is(":checked");
			}
		}
	}
});</CODE>
</PRE>
  <H4>HTML:</H4><PRE><CODE class=html>&lt;form id="myform"&gt;
	&lt;input id="other" type="checkbox" /&gt;
	&lt;input id="other2" type="checkbox" /&gt;
	&lt;input name="details" /&gt;
&lt;/form&gt;</CODE>
</PRE></DIV>
  <DIV class=example>
  <H3>Example:</H3>
  <P>Specifies a group of radio elements. The validation rule is specified only 
  for the first element of the group.</P><PRE><CODE class=javascript>&lt;fieldset&gt;
	&lt;legend&gt;Family&lt;/legend&gt;
	&lt;label for="family_single"&gt;
		&lt;input  type="radio" id="family_single" value="s" name="family" validate="required:true" /&gt;
		Single
	&lt;/label&gt;
	&lt;label for="family_married"&gt;
		&lt;input  type="radio" id="family_married" value="m" name="family" /&gt;
		Married
	&lt;/label&gt;
	&lt;label for="family_divorced"&gt;
		&lt;input  type="radio" id="family_divorced" value="d" name="family" /&gt;
		Divorced
	&lt;/label&gt;
	&lt;label for="family" class="error"&gt;Please select your family status.&lt;/label&gt;
&lt;/fieldset&gt;</CODE>
</PRE></DIV></DIV>
  <LI id=jQueryvalidatormethodsurl><SPAN class=fn><A class=name 
  href="http://jquery.bassistance.de/api-browser/plugins.html#jQueryvalidatormethodsurl">jQuery.validator.methods.url</A>( 
  ) returns <SPAN class=type><SPAN class=tooltip 
  title="true or false.">Boolean</SPAN></SPAN></SPAN> 
  <DIV class=more>
  <DIV class=desc>Return true, if the value is a valid url.<BR><BR>Works with 
  all kind of text inputs.<BR><BR>See http://www.w3.org/Addressing/rfc1738.txt 
  for URL specification.</DIV>
  <DIV class=example>
  <H3>Example:</H3>
  <P>Declares an optional input element whose value must be a valid URL (or none 
  at all).</P><PRE><CODE class=javascript>&lt;input name="homepage" class="{url:true}" /&gt;</CODE>
</PRE></DIV>
  <DIV class=example>
  <H3>Example:</H3>
  <P>Declares an input element whose value must be a valid URL.</P><PRE><CODE class=javascript>&lt;input name="homepage" class="{required:true,url:true}" /&gt;</CODE>
</PRE></DIV></DIV>
  <LI id=jQueryvalidatorprotoypeelementStringElement><SPAN class=fn><A 
  class=name 
  href="http://jquery.bassistance.de/api-browser/plugins.html#jQueryvalidatorprotoypeelementStringElement">jQuery.validator.protoype.element</A>( 
  <SPAN class="arg-type tooltip" title="">String|Element</SPAN> <SPAN 
  class="arg-name tooltip" 
  title="A selector or an element to validate">element</SPAN> ) returns <SPAN 
  class=type><SPAN class=tooltip title="">Boolean True when the element is 
  valid, otherwise false</SPAN></SPAN></SPAN> 
  <DIV class=more>
  <DIV class=desc>Validate on instant a single element.</DIV>
  <DIV class=example>
  <H3>Example:</H3>
  <P>Triggers validation on a single element programmatically.</P><PRE><CODE class=javascript>$("#myform").validate().element( "#myselect" );</CODE>
</PRE></DIV></DIV>
  <LI id=jQueryvalidatorprotoypeform><SPAN class=fn><A class=name 
  href="http://jquery.bassistance.de/api-browser/plugins.html#jQueryvalidatorprotoypeform">jQuery.validator.protoype.form</A>( 
  ) returns <SPAN class=type><SPAN class=tooltip title="">Boolean True when the 
  form is valid, otherwise false</SPAN></SPAN></SPAN> 
  <DIV class=more>
  <DIV class=desc>Validate on instant the entire form.</DIV>
  <DIV class=example>
  <H3>Example:</H3>
  <P>Triggers form validation programmatcitally.</P><PRE><CODE class=javascript>$("#myform").validate().form();</CODE>
</PRE></DIV></DIV>
  <LI id=jQueryvalidatorprotoyperesetForm><SPAN class=fn><A class=name 
  href="http://jquery.bassistance.de/api-browser/plugins.html#jQueryvalidatorprotoyperesetForm">jQuery.validator.protoype.resetForm</A>( 
  ) returns <SPAN class=type><SPAN class=tooltip title=""></SPAN></SPAN></SPAN>
  <DIV class=more>
  <DIV class=desc>Resets the controlled form, including resetting input fields 
  to their original value (requires form plugin), removing classes indicating 
  invalid elements and hiding error messages.</DIV>
  <DIV class=example>
  <H3>Example:</H3>
  <P>Reset the form controlled by this validator.</P><PRE><CODE class=javascript>var validator = $("#myform").validate();
validator.resetForm();</CODE>
</PRE></DIV></DIV>
  <LI id=jQueryvalidatorprotoypeshowErrorsMap><SPAN class=fn><A class=name 
  href="http://jquery.bassistance.de/api-browser/plugins.html#jQueryvalidatorprotoypeshowErrorsMap">jQuery.validator.protoype.showErrors</A>( 
  <SPAN class="arg-type tooltip" 
  title="A Javascript object that contains key/value pairs in the form of properties and values.">Map</SPAN> 
  <SPAN class="arg-name tooltip" 
  title="One or more key/value pairs of input names and messages">errors</SPAN> 
  ) returns <SPAN class=type><SPAN class=tooltip title=""></SPAN></SPAN></SPAN>
  <DIV class=more>
  <DIV class=desc>Show the specified messages.</DIV>
  <DIV class=example>
  <H3>Example:</H3>
  <P>Adds and shows error message programmatically.</P><PRE><CODE class=javascript>var validator = $("#myform").validate();
validator.showErrors({"firstname": "I know that your firstname is Pete, Pete!"});</CODE>
</PRE></DIV></DIV>
  <LI id=jQueryvalidatorsetDefaultsObjectString,><SPAN class=fn><A class=name 
  href="http://jquery.bassistance.de/api-browser/plugins.html#jQueryvalidatorsetDefaultsObjectString,">jQuery.validator.setDefaults</A>( 
  <SPAN class="arg-type tooltip" title="">Object&lt;String,</SPAN> <SPAN 
  class="arg-name tooltip" title=settings>Object&gt;</SPAN> ) returns <SPAN 
  class=type><SPAN class=tooltip title="">undefined</SPAN></SPAN></SPAN> 
  <DIV class=more>
  <DIV class=desc>Modify default settings for validation.</DIV>
  <DIV class=example>
  <H3>Example:</H3>
  <P>Sets the debug setting for all validation calls following.</P><PRE><CODE class=javascript>jQuery.validator.setDefaults({
	debug: true
);</CODE>
</PRE></DIV></DIV>
  <LI id=resultFunction><SPAN class=fn><A class=name 
  href="http://jquery.bassistance.de/api-browser/plugins.html#resultFunction">result</A>( 
  <SPAN class="arg-type tooltip" 
  title="A reference to a Javascript function.">Function</SPAN> <SPAN 
  class="arg-name tooltip" 
  title="The event handler, gets a default event object as first and the selected list item as second argument.">handler</SPAN> 
  ) returns <SPAN class=type><SPAN class=tooltip 
  title="A jQuery object.">jQuery</SPAN></SPAN></SPAN> 
  <DIV class=more>
  <DIV class=desc>Handle the result of a search event. Is executed when the user 
  selects a value or a programmatic search event is triggered (see 
  search()).<BR><BR>You can add and remove (using unbind("result")) this event 
  at any time.</DIV>
  <DIV class=example>
  <H3>Example:</H3>
  <P>Bind a handler to the result event to display the selected value in a 
  #result element. The first argument is a generic event object, in this case 
  with type "result". The second argument refers to the selected data, which can 
  be a plain string value or an array or object. The third argument is the 
  formatted value that is inserted into the input field.</P><PRE><CODE class=javascript>jQuery('input#suggest').result(function(event, data, formatted) {
  jQuery("#result").html( !data ? "No match!" : "Selected: " + formatted);
});</CODE>
</PRE></DIV></DIV>
  <LI id=search><SPAN class=fn><A class=name 
  href="http://jquery.bassistance.de/api-browser/plugins.html#search">search</A>( 
  ) returns <SPAN class=type><SPAN class=tooltip 
  title="A jQuery object.">jQuery</SPAN></SPAN></SPAN> 
  <DIV class=more>
  <DIV class=desc>Trigger a search event. See result(Function) for binding to 
  that event.<BR><BR>A search event mimics the same behaviour as when the user 
  selects a value from the list of autocomplete items. You can use it to execute 
  anything that does something with the selected value, beyond simply putting 
  the value into the input and submitting it.</DIV>
  <DIV class=example>
  <H3>Example:</H3>
  <P>Triggers a search event.</P><PRE><CODE class=javascript>jQuery('input#suggest').search();</CODE>
</PRE></DIV></DIV>
  <LI id=setOptions><SPAN class=fn><A class=name 
  href="http://jquery.bassistance.de/api-browser/plugins.html#setOptions">setOptions</A>( 
  ) returns <SPAN class=type><SPAN class=tooltip 
  title="A jQuery object.">jQuery</SPAN></SPAN></SPAN> 
  <DIV class=more>
  <DIV class=desc>Updates the options for the current autocomplete field. This 
  allows you to change things like the URL, max items to display, etc. If you're 
  changing the URL, be sure to remember to call the flushCache() method.</DIV>
  <DIV class=example>
  <H3>Example:</H3>
  <P>Changes the maximum number of items to display to 15.</P><PRE><CODE class=javascript>jQuery('input#suggest').setOptions({
 max: 15
});</CODE>
</PRE></DIV></DIV>
  <LI id=Stringformat><SPAN class=fn><A class=name 
  href="http://jquery.bassistance.de/api-browser/plugins.html#Stringformat">String.format</A>( 
  ) returns <SPAN class=type><SPAN class=tooltip 
  title="A string of characters.">String</SPAN></SPAN></SPAN> 
  <DIV class=more>
  <DIV class=desc>Simple string-templating, similar to Java's 
  MessageFormat.<BR><BR>Accepts a string template as the first argument. The 
  second is optional: If specified, it is used to replace placeholders in the 
  first argument.<BR><BR>It can be an Array of values or any other type, in 
  which case only one value is replaced.<BR><BR>If the second argument is 
  ommited, a function is returned that expects the value-argument to return the 
  formatted value (see example).</DIV>
  <DIV class=example>
  <H3>Example:</H3>
  <P>Formats a string with a single argument.</P><PRE><CODE class=javascript>String.format("Please enter a value no longer then {0} characters.", 0)</CODE>
</PRE>
  <H4>Result:</H4><PRE><CODE class=html>"Please enter a value no longer then 0 characters."</CODE>
</PRE></DIV>
  <DIV class=example>
  <H3>Example:</H3>
  <P>Formats a string with two arguments. Same as String.format("...", [0, 
  1]);</P><PRE><CODE class=javascript>String.format("Please enter a value between {0} and {1}.", 0, 1)</CODE>
</PRE>
  <H4>Result:</H4><PRE><CODE class=html>"Please enter a value between 0 and 1."</CODE>
</PRE></DIV>
  <DIV class=example>
  <H3>Example:</H3>
  <P>String.format is called at first without the second argument, returning a 
  function that is called immediately with the value argument. Useful to defer 
  the actual formatting to a later point without explicitly writing the 
  function.</P><PRE><CODE class=javascript>String.format("Please enter a value no longer then {0} characters.")(0);</CODE>
</PRE>
  <H4>Result:</H4><PRE><CODE class=html>"Please enter a value no longer then 0 characters."</CODE>
</PRE></DIV></DIV>
  <LI id=textStringString><SPAN class=fn><A class=name 
  href="http://jquery.bassistance.de/api-browser/plugins.html#textStringString">text</A>( 
  <SPAN class="arg-type tooltip" title="A string of characters.">String</SPAN> 
  <SPAN class="arg-name tooltip" title="The text to set and format">text</SPAN>, 
  <SPAN class="arg-type tooltip" title="A string of characters.">String</SPAN> 
  <SPAN class="arg-name tooltip" 
  title="Any number of arguments to place into the text">[...]</SPAN> ) returns 
  <SPAN class=type><SPAN class=tooltip 
  title="A string of characters.">String</SPAN></SPAN></SPAN> 
  <DIV class=more>
  <DIV class=desc>Extends jQuery's built-in text method to accept additional 
  arguments and use them to replace any percent-signs found in the text 
  string.</DIV>
  <DIV class=example>
  <H3>Example:</H3>
  <P>Basic usage example</P><PRE><CODE class=javascript>jQuery("div").text("Hi &lt;strong&gt;%&lt;/strong&gt; in the year %?", "Peter", new Date().getYear() + 1900);</CODE>
</PRE>
  <H4>Result:</H4><PRE><CODE class=html>[ &lt;div&gt;Hi &amp;lt;strong&amp;gt;Peter&amp;lt;/strong&amp;gt; in the year 2007?&lt;/div&gt; ]</CODE>
</PRE></DIV>
  <DIV class=example>
  <H3>Example:</H3>
  <P>Escaping of placeholder</P><PRE><CODE class=javascript>jQuery("div").text("% %% done.", 56);</CODE>
</PRE>
  <H4>Result:</H4><PRE><CODE class=html>[ &lt;div&gt;56 % done.&lt;/div&gt; ]</CODE>
</PRE></DIV></DIV>
  <LI id=TooltipObject><SPAN class=fn><A class=name 
  href="http://jquery.bassistance.de/api-browser/plugins.html#TooltipObject">Tooltip</A>( 
  <SPAN class="arg-type tooltip" 
  title="A simple Javascript object..">Object</SPAN> <SPAN 
  class="arg-name tooltip" 
  title="(optional) Customize your Tooltips">settings</SPAN> ) returns <SPAN 
  class=type><SPAN class=tooltip 
  title="A jQuery object.">jQuery</SPAN></SPAN></SPAN> 
  <DIV class=more>
  <DIV class=desc>Display a customized tooltip instead of the default one for 
  every selected element. The tooltip behaviour mimics the default one, but lets 
  you style the tooltip and specify the delay before displaying it.<BR><BR>In 
  addition, it displays the href value, if it is available.<BR><BR>To style the 
  tooltip, use these selectors in your stylesheet:<BR><BR>#tooltip - The tooltip 
  container<BR><BR>#tooltip h3 - The tooltip title<BR><BR>#tooltip p.body - The 
  tooltip body, shown when using showBody<BR><BR>#tooltip p.url - The tooltip 
  url, shown when using showURL</DIV>
  <H3>Options</H3>
  <UL class=options>
    <LI>delay (<SPAN class="arg-type tooltip" 
    title="A valid numeric.">Number</SPAN>): The number of milliseconds before a 
    tooltip is display, default is 250 
    <LI>event (<SPAN class="arg-type tooltip" 
    title="A string of characters.">String</SPAN>): The event on which the 
    tooltip is displayed, default is "mouseover", "click" works fine, too 
    <LI>track (<SPAN class="arg-type tooltip" 
    title="true or false.">Boolean</SPAN>): If true, let the tooltip track the 
    mousemovement, default is false 
    <LI>showURL (<SPAN class="arg-type tooltip" 
    title="true or false.">Boolean</SPAN>): If true, shows the href or src 
    attribute within p.url, default is true 
    <LI>showBody (<SPAN class="arg-type tooltip" 
    title="A string of characters.">String</SPAN>): If specified, uses the 
    String to split the title, displaying the first part in the h3 tag, all 
    following in the p.body tag, separated with &lt;br/&gt;s, default is null 
    <LI>extraClass (<SPAN class="arg-type tooltip" 
    title="A string of characters.">String</SPAN>): If specified, adds the class 
    to the tooltip helper, default is null 
    <LI>fixPNG (<SPAN class="arg-type tooltip" 
    title="true or false.">Boolean</SPAN>): If true, fixes transparent PNGs in 
    IE, default is false 
    <LI>bodyHandler (<SPAN class="arg-type tooltip" 
    title="A reference to a Javascript function.">Function</SPAN>): TODO 
    document me </LI></UL>
  <DIV class=example>
  <H3>Example:</H3>
  <P>Shows tooltips for anchors, inputs and images, if they have a title</P><PRE><CODE class=javascript>$('a, input, img').Tooltip();</CODE>
</PRE></DIV>
  <DIV class=example>
  <H3>Example:</H3>
  <P>Shows tooltips for labels with no delay, tracking mousemovement, displaying 
  the tooltip when the label is clicked.</P><PRE><CODE class=javascript>$('label').Tooltip({
  delay: 0,
  track: true,
  event: "click"
});</CODE>
</PRE></DIV>
  <DIV class=example>
  <H3>Example:</H3>
  <P>This example starts with modifying the global settings, applying them to 
  all following Tooltips; Afterwards, Tooltips for anchors with class pretty are 
  created with an extra class for the Tooltip: "fancy" for anchors, "fancy-img" 
  for images</P><PRE><CODE class=javascript>// modify global settings
$.extend($.fn.Tooltip.defaults, {
	track: true,
	delay: 0,
	showURL: false,
	showBody: " - ",
 fixPNG: true
});
// setup fancy tooltips
$('a.pretty').Tooltip({
	 extraClass: "fancy"
});
 $('img.pretty').Tooltip({
	 extraClass: "fancy-img",
});</CODE>
</PRE></DIV></DIV>
  <LI id=TreeviewMap><SPAN class=fn><A class=name 
  href="http://jquery.bassistance.de/api-browser/plugins.html#TreeviewMap">Treeview</A>( 
  <SPAN class="arg-type tooltip" 
  title="A Javascript object that contains key/value pairs in the form of properties and values.">Map</SPAN> 
  <SPAN class="arg-name tooltip" 
  title="Optional settings to configure treeview">options</SPAN> ) returns <SPAN 
  class=type><SPAN class=tooltip 
  title="A jQuery object.">jQuery</SPAN></SPAN></SPAN> 
  <DIV class=more>
  <DIV class=desc>Takes an unordered list and makes all branches 
  collapsable.<BR><BR>The "treeview" class is added if not already 
  present.<BR><BR>To hide branches on first display, mark their li elements with 
  the class "closed". If the "collapsed" option is used, mark intially open 
  branches with class "open".</DIV>
  <H3>Options</H3>
  <UL class=options>
    <LI>speed (<SPAN class="arg-type tooltip" 
    title="A string of characters or a number.">String|Number</SPAN>): Speed of 
    animation, see animate() for details. Default: none, no animation 
    <LI>collapsed (<SPAN class="arg-type tooltip" 
    title="true or false.">Boolean</SPAN>): Start with all branches collapsed. 
    Default: none, all expanded 
    <LI>control (<SPAN class="arg-type tooltip" 
    title="A String (to generate HTML on-the-fly), a DOM Element, an Array of DOM Elements or a jQuery object.">&lt;Content&gt;</SPAN>): 
    Container for a treecontrol, see last example. 
    <LI>unique (<SPAN class="arg-type tooltip" 
    title="true or false.">Boolean</SPAN>): Set to allow only one branch on one 
    level to be open (closing siblings which opening). Default: none 
    <LI>toggle (<SPAN class="arg-type tooltip" 
    title="A reference to a Javascript function.">Function</SPAN>): Callback 
    when toggling a branch. Arguments: "this" refers to the UL that was shown or 
    hidden. Works only with speed option set (set speed: 1 to enable callback 
    without animations). Default: none 
    <LI>store (<SPAN class="arg-type tooltip" title="">Boolean|Object</SPAN>): 
    When set, stores the tree-state in a cookie when leaving/reloading the page, 
    and restoring that state when loading the page. By default, no state is 
    stored. Only one tree-per-page can be stored. When specifying the option as 
    a boolean-true, the default setting for cookie-storage is used, saving the 
    state for the browser session. To set a different expiration, set the option 
    to an object with a "expiration" property. Refer to the cookie plugin for 
    details about possible values of that object. </LI></UL>
  <DIV class=example>
  <H3>Example:</H3>
  <P>The following styles are necessary in your stylesheet. There is are 
  alternative sets of images available.</P><PRE><CODE class=javascript>.treeview, .treeview ul { 
	padding: 0;
	margin: 0;
	list-style: none;
}	

.treeview li { 
	margin: 0;
	padding: 4px 0 3px 20px;
}

.treeview li { background: url(images/tv-item.gif) 0 0 no-repeat; }
.treeview .collapsable { background-image: url(images/tv-collapsable.gif); }
.treeview .expandable { background-image: url(images/tv-expandable.gif); }
.treeview .last { background-image: url(images/tv-item-last.gif); }
.treeview .lastCollapsable { background-image: url(images/tv-collapsable-last.gif); }
.treeview .lastExpandable { background-image: url(images/tv-expandable-last.gif); }</CODE>
</PRE></DIV>
  <DIV class=example>
  <H3>Example:</H3>
  <P>Basic usage example</P><PRE><CODE class=javascript>$("ul").Treeview();</CODE>
</PRE>
  <H4>HTML:</H4><PRE><CODE class=html>&lt;ul&gt;
  &lt;li&gt;Item 1
    &lt;ul&gt;
      &lt;li&gt;Item 1.1&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li class="closed"&gt;Item 2 (starts closed)
    &lt;ul&gt;
      &lt;li&gt;Item 2.1
        &lt;ul&gt;
          &lt;li&gt;Item 2.1.1&lt;/li&gt;
          &lt;li&gt;Item 2.1.2&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;Item 2.2&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Item 3&lt;/li&gt;
&lt;/ul&gt;</CODE>
</PRE></DIV>
  <DIV class=example>
  <H3>Example:</H3>
  <P>Create a treeview that starts collapsed. Toggling branches is animated.</P><PRE><CODE class=javascript>$("ul").Treeview({ speed: "fast", collapsed: true});</CODE>
</PRE>
  <H4>HTML:</H4><PRE><CODE class=html>&lt;ul&gt;
  &lt;li class="open"&gt;Item 1 (starts open)
    &lt;ul&gt;
      &lt;li&gt;Item 1.1&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Item 2
    &lt;ul&gt;
      &lt;li&gt;Item 2.1&lt;/li&gt;
      &lt;li&gt;Item 2.2&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;</CODE>
</PRE></DIV>
  <DIV class=example>
  <H3>Example:</H3>
  <P>Creates a treeview that can be controlled with a few links. Very likely to 
  be changed/improved in future versions.</P><PRE><CODE class=javascript>$("ul").Treeview({ control: #treecontrol });</CODE>
</PRE>
  <H4>HTML:</H4><PRE><CODE class=html>&lt;div id="treecontrol"&gt;
  &lt;a href="#"&gt;Collapse All&lt;/a&gt;
  &lt;a href="#"&gt;Expand All&lt;/a&gt;
  &lt;a href="#"&gt;Toggle All&lt;/a&gt;
&lt;/div&gt;</CODE>
</PRE></DIV></DIV>
  <LI id=validateMap><SPAN class=fn><A class=name 
  href="http://jquery.bassistance.de/api-browser/plugins.html#validateMap">validate</A>( 
  <SPAN class="arg-type tooltip" 
  title="A Javascript object that contains key/value pairs in the form of properties and values.">Map</SPAN> 
  <SPAN class="arg-name tooltip" 
  title="Optional settings to configure validation">options</SPAN> ) returns 
  <SPAN class=type><SPAN class=tooltip title="">$.validator</SPAN></SPAN></SPAN> 

  <DIV class=more>
  <DIV class=desc>Validates a single form.<BR><BR>The normal behaviour is to 
  validate a form when a submit button is clicked or the user presses enter when 
  an input of that form is focused.<BR><BR>It is also possible to validate each 
  individual element of that form, eg. on blur or keyup.</DIV>
  <H3>Options</H3>
  <UL class=options>
    <LI>errorClass (<SPAN class="arg-type tooltip" 
    title="A string of characters.">String</SPAN>): Use this class to look for 
    existing error labels and add it to invalid elements. Default: "error" 
    <LI>wrapper (<SPAN class="arg-type tooltip" 
    title="A string of characters.">String</SPAN>): Wrap error labels with the 
    specified element, eg "li". Default: none 
    <LI>debug (<SPAN class="arg-type tooltip" 
    title="true or false.">Boolean</SPAN>): If true, the form is not submitted 
    and certain errors are display on the console (requires Firebug or Firebug 
    lite). Default: none 
    <LI>focusInvalid (<SPAN class="arg-type tooltip" 
    title="true or false.">Boolean</SPAN>): Focus the last active or first 
    invalid element on submit or via validator.focusInvalid(). Default: true 
    <LI>submitHandler (<SPAN class="arg-type tooltip" 
    title="A reference to a Javascript function.">Function</SPAN>): Callback for 
    handling the actual submit when the form is valid. Gets the form as the only 
    argmument. Default: normal form submit 
    <LI>Object&gt; (<SPAN class="arg-type tooltip" 
    title="">Map&lt;String,</SPAN>): messages Key/value pairs defining custom 
    messages. Key is the name of an element, value the message to display for 
    that element. Instead of a plain message another map with specific messages 
    for each rule can be used. Can be specified for one or more elements. 
    Overrides the title attribute of an element. Each message can be a String or 
    a Function. The Function is called with the element as the first and the 
    validator as the second argument and must return a String to display as the 
    message for that element. Default: none, the default message for the method 
    is used. 
    <LI>Object&gt; (<SPAN class="arg-type tooltip" 
    title="">Map&lt;String,</SPAN>): rules Key/value pairs defining custom 
    rules. Key is the ID or name (for radio/checkbox inputs) of an element, 
    value is an object consisting of rule/parameter pairs, eg. {required: true, 
    min: 3}. Once specified, metadata rules are completely ignored. Default: 
    none, rules are read from metadata via metadata plugin 
    <LI>onsubmit (<SPAN class="arg-type tooltip" 
    title="true or false.">Boolean</SPAN>): Validate the form on submit. Set to 
    false to use only other events for validation (option event). Default: true 
    <LI>meta (<SPAN class="arg-type tooltip" 
    title="A string of characters.">String</SPAN>): In case you use metadata for 
    other plugins, too, you want to wrap your validation rules into their own 
    object that can be specified via this option. Default: none 
    <LI>errorContainer (<SPAN class="arg-type tooltip" 
    title="A jQuery object.">jQuery</SPAN>): Hide and show this container when 
    validating. Default: none 
    <LI>errorLabelContainer (<SPAN class="arg-type tooltip" 
    title="A jQuery object.">jQuery</SPAN>): Search and append error labels to 
    this container, and show and hide it accordingly. Default: none 
    <LI>showErrors (<SPAN class="arg-type tooltip" 
    title="A reference to a Javascript function.">Function</SPAN>): A custom 
    message display handler. Gets the map of errors as the first argument and a 
    refernce to the validator object as the second. You can trigger (in addition 
    to your own messages) the default behaviour by calling the 
    defaultShowErrors() method of the validator. Default: none, uses built-in 
    message disply. 
    <LI>errorPlacement (<SPAN class="arg-type tooltip" 
    title="A reference to a Javascript function.">Function</SPAN>): Used to 
    customize placement of created error labels. First argument: jQuery object 
    containing the created error label Second argument: jQuery object containing 
    the invalid element Default: Places the error label after the invalid 
    element 
    <LI>errorElement (<SPAN class="arg-type tooltip" 
    title="A string of characters.">String</SPAN>): The element to use for 
    generated error messages. Default: "label" 
    <LI>If (<SPAN class="arg-type tooltip" title="">String|Function</SPAN>): 
    specified, the error label is displayed to show a valid element. If a String 
    is given, its added as a class to the label. If a Function is given, its 
    called with the label (as a jQuery object) as its only argument. That can be 
    used to add a text like "ok!". Default: none 
    <LI>focusCleanup (<SPAN class="arg-type tooltip" 
    title="true or false.">Boolean</SPAN>): If enabled, removes the errorClass 
    from the invalid elements and hides all errors messages whenever the element 
    is focused. Avoid combination with focusInvalid. Default: false 
    <LI>ignore (<SPAN class="arg-type tooltip" title="">String|Element</SPAN>): 
    Elements to ignore when validating, simply filtering them out. jQuery's 
    not-method is used, there everything that is accepted by not() can be passed 
    as this option. Default: None, though inputs of type submit and reset are 
    always ignored. </LI></UL>
  <DIV class=example>
  <H3>Example:</H3>
  <P>Validates a form on submit. Rules are read from metadata.</P><PRE><CODE class=javascript>$("#myform").validate();</CODE>
</PRE>
  <H4>HTML:</H4><PRE><CODE class=html>&lt;form id="myform"&gt;
  &lt;input name="firstname" class="{required:true}" /&gt;
&lt;/form&gt;</CODE>
</PRE></DIV>
  <DIV class=example>
  <H3>Example:</H3>
  <P>Validates all input elements on blur event (when the element looses focus). 
  Adds a class "valid" to all error labels when the elements are valid and keeps 
  showing them.</P><PRE><CODE class=javascript>$("input").validate({
		event: "blur",
		success: "valid"
});</CODE>
</PRE></DIV>
  <DIV class=example>
  <H3>Example:</H3>
  <P>Uses form plugin's ajaxSubmit method to handle the form submit, while 
  preventing the default submit.</P><PRE><CODE class=javascript>$("#myform").validate({
  submitHandler: function(form) {
  	$(form).ajaxSubmit();
  }
});</CODE>
</PRE></DIV>
  <DIV class=example>
  <H3>Example:</H3>
  <P>Validate a form on submit and each element on keyup. Rules are specified 
  for three elements, and a message is customized for the "password" and the 
  "age" elements. Inline rules are ignored. The password is only required when 
  the age is lower then 18. The age is only required when the firstname is 
  blank. Note that "first-name" is quoted, because it isn't a valid javascript 
  identifier. "first-name": "required" also uses a shortcut replacement for { 
  required: true }. That works for all trivial validations that expect no more 
  then a boolean-true argument. The required-message for password is specified 
  as a function to use runtime customization.</P><PRE><CODE class=javascript>$("#myform").validate({
 event: "keyup"
	rules: {
		"first-name": "required",
		age: {
			required: "#firstname:blank",
			number: true,
			minValue: 3
		},
		password: {
			required: function() {
				return $("#age").val() &lt; 18;
			},
			minLength: 5,
			maxLength: 32
		}
	},
 messages: {
		password: {
			required: function(element, validator) {
				return "Your password is required because with " + $("#age").val() + ", you are not old enough yet."
			},
			minLength: "Please enter a password at least 5 characters long.",
			maxLength: "Please enter a password no longer then 32 characters long."
		},
		age: "Please specify your age as a number (at least 3)."
	}
});</CODE>
</PRE></DIV>
  <DIV class=example>
  <H3>Example:</H3>
  <P>Validates a form on submit. The class used to search, create and display 
  error labels is changed to "invalid". This is also added to invalid elements. 
  All error labels are displayed inside an unordered list with the ID 
  "messageBox", as specified by the jQuery object passed as errorContainer 
  option. All error elements are wrapped inside an li element, to create a list 
  of messages. To ease the setup of the form, debug option is set to true, 
  preventing a submit of the form no matter of being valid or not.</P><PRE><CODE class=javascript>$("#myform").validate({
  errorClass: "invalid",
  errorLabelContainer: $("#messageBox"),
  wrapper: "li"
});</CODE>
</PRE>
  <H4>HTML:</H4><PRE><CODE class=html>&lt;ul id="messageBox"&gt;&lt;/ul&gt;
&lt;form id="myform" action="/login" method="post"&gt;
  &lt;label&gt;Firstname&lt;/label&gt;
  &lt;input name="fname" class="{required:true}" /&gt;
  &lt;label&gt;Lastname&lt;/label&gt;
  &lt;input name="lname" title="Your lastname, please!" class="{required:true}" /&gt;
&lt;/form&gt;</CODE>
</PRE>
  <H4>Result:</H4><PRE><CODE class=html>&lt;ul id="messageBox"&gt;
  &lt;li&gt;&lt;label for="fname" class="invalid"&gt;Please specify your firstname!&lt;/label&gt;&lt;/li&gt;
  &lt;li&gt;&lt;label for="lname" class="invalid"&gt;Your lastname, please!&lt;/label&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;form id="myform" action="/login" method="post"&gt;
  &lt;label&gt;Firstname&lt;/label&gt;
  &lt;input name="fname" class="{required:true} invalid" /&gt;
  &lt;label&gt;Lastname&lt;/label&gt;
  &lt;input name="lname" title="Your lastname, please!" class="{required:true} invalid" /&gt;
&lt;/form&gt;</CODE>
</PRE></DIV>
  <DIV class=example>
  <H3>Example:</H3>
  <P>Validates a form on submit. Customizes the placement of the generated 
  labels by appending them to the next table cell. Displays "ok!" for valid 
  elements and adds a class "success" to the message (the class "invalid" is 
  kept to identify the error label).</P><PRE><CODE class=javascript>$("#myform").validate({
	errorPlacement: function(error, element) {
		error.appendTo( element.parent("td").next("td") );
	},
	success: function(label) {
		label.text("ok!").addClass("success");
	}
});</CODE>
</PRE>
  <H4>HTML:</H4><PRE><CODE class=html>&lt;form id="myform" action="/login" method="post"&gt;
	&lt;table&gt;
		&lt;tr&gt;
			&lt;td&gt;&lt;label&gt;Firstname&lt;/label&gt;
			&lt;td&gt;&lt;input name="fname" class="{required:true}" value="Pete" /&gt;&lt;/td&gt;
			&lt;td&gt;&lt;/td&gt;
		&lt;/tr&gt;
		&lt;tr&gt;
			&lt;td&gt;&lt;label&gt;Lastname&lt;/label&gt;&lt;/td&gt;
			&lt;td&gt;&lt;input name="lname" title="Your lastname, please!" class="{required:true}" /&gt;&lt;/td&gt;
			&lt;td&gt;&lt;/td&gt;
		&lt;/tr&gt;
	&lt;/table&gt;
&lt;/form&gt;</CODE>
</PRE>
  <H4>Result:</H4><PRE><CODE class=html>&lt;form id="myform" action="/login" method="post"&gt;
	&lt;table&gt;
		&lt;tr&gt;
			&lt;td&gt;&lt;label&gt;Firstname&lt;/label&gt;
			&lt;td&gt;&lt;input name="fname" class="{required:true}" value="Pete" /&gt;&lt;/td&gt;
			&lt;td&gt;&lt;label for="fname" class="invalid success"&gt;ok!&lt;/label&gt;&lt;/td&gt;
		&lt;/tr&gt;
		&lt;tr&gt;
			&lt;td&gt;&lt;label&gt;Lastname&lt;/label&gt;&lt;/td&gt;
			&lt;td&gt;&lt;input name="lname" title="Your lastname, please!" class="{required:true}" /&gt;&lt;/td&gt;
			&lt;td&gt;&lt;label for="lname" class="invalid"&gt;Your lastname, please!&lt;/label&gt;&lt;/td&gt;
		&lt;/tr&gt;
	&lt;/table&gt;
&lt;/form&gt;</CODE>
</PRE></DIV>
  <DIV class=example>
  <H3>Example:</H3>
  <P>Validates a form on submit. Similar to the above example, but with an 
  additional container for error messages. The elements given as the 
  errorContainer are all shown and hidden when errors occur. But the error 
  labels themselve are added to the element(s) given as errorLabelContainer, 
  here an unordered list. Therefore the error labels are also wrapped into li 
  elements (wrapper option).</P><PRE><CODE class=javascript>$("#myform").validate({
  errorContainer: $("#messageBox1, #messageBox2"),
  errorLabelContainer: $("#messageBox1 ul"),
  wrapper: "li",
});</CODE>
</PRE>
  <H4>HTML:</H4><PRE><CODE class=html>&lt;div id="messageBox1"&gt;
  &lt;h3&gt;The are errors in your form!&lt;/h3&gt;
  &lt;ul&gt;&lt;/ul&gt;
&lt;/div&gt;
&lt;form id="myform" action="/login" method="post"&gt;
  &lt;label&gt;Firstname&lt;/label&gt;
  &lt;input name="fname" class="{required:true}" /&gt;
  &lt;label&gt;Lastname&lt;/label&gt;
  &lt;input name="lname" title="Your lastname, please!" class="{required:true}" /&gt;
&lt;/form&gt;
&lt;div id="messageBox2"&gt;
  &lt;h3&gt;The are errors in your form, see details above!&lt;/h3&gt;
&lt;/div&gt;</CODE>
</PRE>
  <H4>Result:</H4><PRE><CODE class=html>&lt;ul id="messageBox"&gt;
  &lt;li&gt;&lt;label for="fname" class="error"&gt;Please specify your firstname!&lt;/label&gt;&lt;/li&gt;
  &lt;li&gt;&lt;label for="lname" class="error"&gt;Your lastname, please!&lt;/label&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;form id="myform" action="/login" method="post"&gt;
  &lt;label&gt;Firstname&lt;/label&gt;
  &lt;input name="fname" class="{required:true} error" /&gt;
  &lt;label&gt;Lastname&lt;/label&gt;
  &lt;input name="lname" title="Your lastname, please!" class="{required:true} error" /&gt;
&lt;/form&gt;</CODE>
</PRE></DIV></DIV></LI></UL></DIV></BODY></HTML>
